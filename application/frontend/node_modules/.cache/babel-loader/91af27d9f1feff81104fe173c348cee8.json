{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\components\\\\Signup.js\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport { useAuth } from './Auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default async function Signup() {\n  const {\n    data,\n    error\n  } = await supabase.auth.signUp({\n    email,\n    password\n  }, {\n    data: {\n      username\n    }\n  });\n\n  if (error) {\n    setRMsg(error.message);\n  } else {\n    setRMsg('User created successfully');\n    setUser(data.user);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), \"email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 115\n    }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Enter your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 127\n    }, this), \"username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Enter your username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 123\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Register,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 57\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n/*\r\nexport function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n\r\n  // Get signUp function from the auth context\r\n  const { signUp } = useAuth()\r\n\r\n  const history = useNavigate()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // Get email and password input values\r\n    const email = emailRef.current.value\r\n    const password = passwordRef.current.value\r\n\r\n    // Calls `signUp` function from the context\r\n    const { error } = await signUp({ email, password })\r\n\r\n    if (error) {\r\n      alert('error signing in')\r\n    } else {\r\n      // Redirect user to Dashboard\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"input-email\">Email</label>\r\n        <input id=\"input-email\" type=\"email\" ref={emailRef} />\r\n\r\n        <label htmlFor=\"input-password\">Password</label>\r\n        <input id=\"input-password\" type=\"password\" ref={passwordRef} />\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\">Sign up</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n/*\r\n\r\nimport React, { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n \r\nconst Register = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n    const [msg, setMsg] = useState('');\r\n    const history = useNavigate();\r\n   \r\n \r\n    const Register = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:5000/users', {\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n                confPassword: confPassword\r\n            });\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setMsg(error.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n \r\n    return (\r\n        <section className=\"hero has-background-grey-light is-fullheight is-fullwidth\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"columns is-centered\">\r\n                        <div className=\"column is-4-desktop\">\r\n                            <form onSubmit={Register} className=\"box\">\r\n                                <p className=\"has-text-centered\">{msg}</p>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Name</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"text\" className=\"input\" placeholder=\"Name\"\r\n                                            value={name} onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Email</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"text\" className=\"input\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Password</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"password\" className=\"input\" placeholder=\"******\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Confirm Password</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"password\" className=\"input\" placeholder=\"******\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <button className=\"button is-success is-fullwidth\">Register</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n \r\nexport default Register\r\n\r\n*/\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useNavigate","Link","useRef","useState","useAuth","Signup","data","error","supabase","auth","signUp","email","password","username","setRMsg","message","setUser","user","e","setEmail","target","value","setPassword","setUsername","Register"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/components/Signup.js"],"sourcesContent":["import { useNavigate, Link } from 'react-router-dom'\r\nimport { useRef, useState } from 'react'\r\nimport { useAuth } from './Auth.js'\r\n\r\nexport default async function Signup() {\r\n    const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n    },\r\n        {\r\n            data: {\r\n                username\r\n            }\r\n        });\r\n    if (error) {\r\n        setRMsg(error.message)\r\n    } else {\r\n        setRMsg('User created successfully')\r\n        setUser(data.user)\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Register User</h1>\r\n            email:<input type=\"email\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Enter your email\" /><br />\r\n            Password:<input type=\"password\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Enter your Password\" /><br />\r\n            username:<input type=\"text\" onChange={(e) => setUsername(e.target.value)} placeholder=\"Enter your username\" /><br />\r\n            <button onClick={Register}>Register</button><br></br>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n/*\r\nexport function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n\r\n  // Get signUp function from the auth context\r\n  const { signUp } = useAuth()\r\n\r\n  const history = useNavigate()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // Get email and password input values\r\n    const email = emailRef.current.value\r\n    const password = passwordRef.current.value\r\n\r\n    // Calls `signUp` function from the context\r\n    const { error } = await signUp({ email, password })\r\n\r\n    if (error) {\r\n      alert('error signing in')\r\n    } else {\r\n      // Redirect user to Dashboard\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"input-email\">Email</label>\r\n        <input id=\"input-email\" type=\"email\" ref={emailRef} />\r\n\r\n        <label htmlFor=\"input-password\">Password</label>\r\n        <input id=\"input-password\" type=\"password\" ref={passwordRef} />\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\">Sign up</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n/*\r\n\r\nimport React, { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n \r\nconst Register = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confPassword, setConfPassword] = useState('');\r\n    const [msg, setMsg] = useState('');\r\n    const history = useNavigate();\r\n   \r\n \r\n    const Register = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:5000/users', {\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n                confPassword: confPassword\r\n            });\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setMsg(error.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n \r\n    return (\r\n        <section className=\"hero has-background-grey-light is-fullheight is-fullwidth\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"columns is-centered\">\r\n                        <div className=\"column is-4-desktop\">\r\n                            <form onSubmit={Register} className=\"box\">\r\n                                <p className=\"has-text-centered\">{msg}</p>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Name</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"text\" className=\"input\" placeholder=\"Name\"\r\n                                            value={name} onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Email</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"text\" className=\"input\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Password</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"password\" className=\"input\" placeholder=\"******\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Confirm Password</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"password\" className=\"input\" placeholder=\"******\" value={confPassword} onChange={(e) => setConfPassword(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <button className=\"button is-success is-fullwidth\">Register</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n \r\nexport default Register\r\n\r\n*/"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,eAAe,eAAeC,MAAf,GAAwB;EACnC,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAkB,MAAMC,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB;IAC/CC,KAD+C;IAE/CC;EAF+C,CAArB,EAI1B;IACIN,IAAI,EAAE;MACFO;IADE;EADV,CAJ0B,CAA9B;;EASA,IAAIN,KAAJ,EAAW;IACPO,OAAO,CAACP,KAAK,CAACQ,OAAP,CAAP;EACH,CAFD,MAEO;IACHD,OAAO,CAAC,2BAAD,CAAP;IACAE,OAAO,CAACV,IAAI,CAACW,IAAN,CAAP;EACH;;EACD,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,yBAEU;MAAO,IAAI,EAAC,OAAZ;MAAoB,QAAQ,EAAGC,CAAD,IAAOC,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAA7C;MAA+D,WAAW,EAAC;IAA3E;MAAA;MAAA;MAAA;IAAA,QAFV,eAE0G;MAAA;MAAA;MAAA;IAAA,QAF1G,4BAGa;MAAO,IAAI,EAAC,UAAZ;MAAuB,QAAQ,EAAGH,CAAD,IAAOI,WAAW,CAACJ,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnD;MAAqE,WAAW,EAAC;IAAjF;MAAA;MAAA;MAAA;IAAA,QAHb,eAGsH;MAAA;MAAA;MAAA;IAAA,QAHtH,4BAIa;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGH,CAAD,IAAOK,WAAW,CAACL,CAAC,CAACE,MAAF,CAASC,KAAV,CAA/C;MAAiE,WAAW,EAAC;IAA7E;MAAA;MAAA;MAAA;IAAA,QAJb,eAIkH;MAAA;MAAA;MAAA;IAAA,QAJlH,eAKI;MAAQ,OAAO,EAAEG,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAKgD;MAAA;MAAA;MAAA;IAAA,QALhD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA3J8BnB,M"},"metadata":{},"sourceType":"module"}