{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Quiz\\\\QuizFinal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport SetupForm from \"./SetupForm\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizFinal() {\n  _s();\n\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer\n  } = useGlobalContext();\n\n  if (waiting) {\n    return /*#__PURE__*/_jsxDEV(SetupForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    question,\n    incorrect_answers,\n    correct_answer\n  } = questions[index]; // const answers = [...incorrect_answers, correct_answer];\n\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"correct-answers\",\n        children: [\"correct answers:\", correct, \"/\", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          dangerouslySetInnerHTML: {\n            __html: question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: answers.map((answer, index) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"answer-btn\",\n              onClick: () => {\n                checkAnswer(correct_answer === answer);\n              },\n              dangerouslySetInnerHTML: {\n                __html: answer\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-question\",\n        onClick: nextQuestion,\n        children: \"next question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizFinal, \"noYkX6TVLqfmJ6sE/3zIqAKxzWw=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = QuizFinal;\nexport default QuizFinal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizFinal\");","map":{"version":3,"names":["React","useGlobalContext","SetupForm","Loading","Modal","QuizFinal","waiting","loading","questions","index","correct","nextQuestion","checkAnswer","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","__html","map","answer"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Quiz/QuizFinal.js"],"sourcesContent":["import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nimport SetupForm from \"./SetupForm\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\n\nfunction QuizFinal() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n  if (waiting) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n  const { question, incorrect_answers, correct_answer } = questions[index];\n  // const answers = [...incorrect_answers, correct_answer];\n\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers:{correct}/{index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div className=\"btn-container\">\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className=\"answer-btn\"\n                  onClick={() => {\n                    checkAnswer(correct_answer === answer);\n                  }}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                />\n              );\n            })}\n          </div>\n        </article>\n        <button className=\"next-question\" onClick={nextQuestion}>\n          next question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default QuizFinal;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM;IACJC,OADI;IAEJC,OAFI;IAGJC,SAHI;IAIJC,KAJI;IAKJC,OALI;IAMJC,YANI;IAOJC;EAPI,IAQFX,gBAAgB,EARpB;;EASA,IAAIK,OAAJ,EAAa;IACX,oBAAO,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,IAAIC,OAAJ,EAAa;IACX,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,MAAM;IAAEM,QAAF;IAAYC,iBAAZ;IAA+BC;EAA/B,IAAkDP,SAAS,CAACC,KAAD,CAAjE,CAhBmB,CAiBnB;;EAEA,IAAIO,OAAO,GAAG,CAAC,GAAGF,iBAAJ,CAAd;EACA,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;;EACA,IAAIH,SAAS,KAAK,CAAlB,EAAqB;IACnBD,OAAO,CAACK,IAAR,CAAaN,cAAb;EACD,CAFD,MAEO;IACLC,OAAO,CAACK,IAAR,CAAaL,OAAO,CAACC,SAAD,CAApB;IACAD,OAAO,CAACC,SAAD,CAAP,GAAqBF,cAArB;EACD;;EACD,oBACE;IAAA,wBACE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAS,SAAS,EAAC,MAAnB;MAAA,wBACE;QAAG,SAAS,EAAC,iBAAb;QAAA,+BACmBL,OADnB,OAC6BD,KAD7B;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAS,SAAS,EAAC,WAAnB;QAAA,wBACE;UAAI,uBAAuB,EAAE;YAAEa,MAAM,EAAET;UAAV;QAA7B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,eAAf;UAAA,UACGG,OAAO,CAACO,GAAR,CAAY,CAACC,MAAD,EAASf,KAAT,KAAmB;YAC9B,oBACE;cAEE,SAAS,EAAC,YAFZ;cAGE,OAAO,EAAE,MAAM;gBACbG,WAAW,CAACG,cAAc,KAAKS,MAApB,CAAX;cACD,CALH;cAME,uBAAuB,EAAE;gBAAEF,MAAM,EAAEE;cAAV;YAN3B,GACOf,KADP;cAAA;cAAA;cAAA;YAAA,QADF;UAUD,CAXA;QADH;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAqBE;QAAQ,SAAS,EAAC,eAAlB;QAAkC,OAAO,EAAEE,YAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAzDQN,S;UASHJ,gB;;;KATGI,S;AA2DT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}