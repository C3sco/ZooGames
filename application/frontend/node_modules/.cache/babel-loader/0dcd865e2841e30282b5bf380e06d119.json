{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { supabase } from '../components/Database.js';\nexport default function ProfileImage(_ref) {\n  /*\r\n  const [avatarUrl, setAvatarUrl] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n    useEffect(() => {\r\n    if (url) downloadImage(url,id)\r\n  }, [url])\r\n    async function downloadImage(url,id) {\r\n    try {\r\n      const { data, error } = await supabase.storage.from('images').download(id+\"/\")  //list(id + \"/\", {limit:1,offset:0,sortBy:{column:\"name\",order:\"asc\"}}) //.download(path)\r\n      if (error) {\r\n        throw error\r\n      }\r\n      const url = URL.createObjectURL(data)\r\n      setAvatarUrl(url)\r\n      // await supabase.from('users').update({image:url}).eq(id,id)\r\n    } catch (error) {\r\n      console.log('Error downloading image: ', error.message)\r\n    }\r\n  }\r\n    const uploadAvatar = async (event) => {\r\n    try {\r\n      setUploading(true)\r\n        if (!event.target.files || event.target.files.length === 0) {\r\n        throw new Error('Devi selezionare un\\' immagine')\r\n      }\r\n        const file = event.target.files[0]\r\n      const fileExt = file.name.split('.').pop()\r\n      const fileName = `${Math.random()}.${fileExt}`\r\n      const filePath = `${fileName}`\r\n        let { data,error: uploadError } = await supabase.storage.from('images').upload(id + \"/\",file)\r\n        // let { error: uploadError } = await supabase.storage.from('images').upload(filePath, file)\r\n        if (uploadError) {\r\n        throw uploadError\r\n      }\r\n        // onUpload(filePath)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n    return (\r\n    <div style={{ width: size }} aria-live=\"polite\">\r\n      <br></br>\r\n      <img\r\n        src={avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`}\r\n        alt={avatarUrl ? 'Avatar' : 'No image'}\r\n        className=\"avatar image\"\r\n        style={{ height: size, width: size }}\r\n      />\r\n      {uploading ? (\r\n        'Uploading...'\r\n      ) : (\r\n        <>\r\n          <label className=\"button primary block\" htmlFor=\"single\">\r\n            Cambia immagine (CLICK)\r\n          </label>\r\n          {/* <Form.Group className=\"mb-3\" style={{maxWidth:\"500px\"}}>\r\n            </Form.Group> }\r\n          <div className=\"visually-hidden\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"single\"\r\n              accept=\"image/*\"\r\n              onChange={uploadAvatar}\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )*/\n\n  let {\n    url,\n    id,\n    size,\n    onUpload\n  } = _ref;\n}\n_c = ProfileImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileImage\");","map":{"version":3,"names":["useEffect","useState","supabase","ProfileImage","url","id","size","onUpload"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/userPages/ProfileImage.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { supabase } from '../components/Database.js'\r\n\r\nexport default function ProfileImage({ url, id, size, onUpload }) {\r\n\r\n  /*\r\n  const [avatarUrl, setAvatarUrl] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (url) downloadImage(url,id)\r\n  }, [url])\r\n\r\n  async function downloadImage(url,id) {\r\n    try {\r\n      const { data, error } = await supabase.storage.from('images').download(id+\"/\")  //list(id + \"/\", {limit:1,offset:0,sortBy:{column:\"name\",order:\"asc\"}}) //.download(path)\r\n      if (error) {\r\n        throw error\r\n      }\r\n      const url = URL.createObjectURL(data)\r\n      setAvatarUrl(url)\r\n      // await supabase.from('users').update({image:url}).eq(id,id)\r\n    } catch (error) {\r\n      console.log('Error downloading image: ', error.message)\r\n    }\r\n  }\r\n\r\n  const uploadAvatar = async (event) => {\r\n    try {\r\n      setUploading(true)\r\n\r\n      if (!event.target.files || event.target.files.length === 0) {\r\n        throw new Error('Devi selezionare un\\' immagine')\r\n      }\r\n\r\n      const file = event.target.files[0]\r\n      const fileExt = file.name.split('.').pop()\r\n      const fileName = `${Math.random()}.${fileExt}`\r\n      const filePath = `${fileName}`\r\n\r\n      let { data,error: uploadError } = await supabase.storage.from('images').upload(id + \"/\",file)\r\n\r\n      // let { error: uploadError } = await supabase.storage.from('images').upload(filePath, file)\r\n\r\n      if (uploadError) {\r\n        throw uploadError\r\n      }\r\n\r\n      // onUpload(filePath)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: size }} aria-live=\"polite\">\r\n      <br></br>\r\n      <img\r\n        src={avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`}\r\n        alt={avatarUrl ? 'Avatar' : 'No image'}\r\n        className=\"avatar image\"\r\n        style={{ height: size, width: size }}\r\n      />\r\n      {uploading ? (\r\n        'Uploading...'\r\n      ) : (\r\n        <>\r\n          <label className=\"button primary block\" htmlFor=\"single\">\r\n            Cambia immagine (CLICK)\r\n          </label>\r\n          {/* <Form.Group className=\"mb-3\" style={{maxWidth:\"500px\"}}>\r\n\r\n          </Form.Group> }\r\n          <div className=\"visually-hidden\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"single\"\r\n              accept=\"image/*\"\r\n              onChange={uploadAvatar}\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )*/\r\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,eAAe,SAASC,YAAT,OAAmD;EAEhE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAzEkE,IAA7B;IAAEC,GAAF;IAAOC,EAAP;IAAWC,IAAX;IAAiBC;EAAjB,CAA6B;AAqFjE;KArFuBJ,Y"},"metadata":{},"sourceType":"module"}