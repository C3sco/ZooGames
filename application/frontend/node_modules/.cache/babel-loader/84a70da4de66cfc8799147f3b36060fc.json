{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\components\\\\AdminPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './Database.js';\n/*\r\nPagina con table con tutti gli user, possibilità di cercare user e di modificare i dati\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst db = supabase; // async function getSingleUser(username) {\n//     try {\n//         var user = await db.from('users').select('*').eq('username', username);\n//     } catch (err) {\n//         console.log(\"Connessione al database fallita: \" + err);\n//     }\n//     return user\n// }\n// async function deleteUser(username) {\n//     try {\n//         await db.from('users').delete('*').eq('username', username);\n//     } catch (err) {\n//         console.log(\"Connessione al database fallita: \" + err);\n//     }\n//     console.log(\"L'utente \" + username + \" è stato eliminato correttamente\");\n// }\n\nexport default function AdminPage() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    db.from('users').select().then(response => {\n      setUsers(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"UTENTI\", /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cognome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data di Nascita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.surname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.birthday\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminPage, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","db","AdminPage","users","setUsers","from","select","then","response","data","map","user","username","email","name","surname","birthday","id"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/components/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from './Database.js'\r\n/*\r\nPagina con table con tutti gli user, possibilità di cercare user e di modificare i dati\r\n*/\r\n\r\nconst db = supabase;\r\n\r\n// async function getSingleUser(username) {\r\n\r\n//     try {\r\n//         var user = await db.from('users').select('*').eq('username', username);\r\n//     } catch (err) {\r\n//         console.log(\"Connessione al database fallita: \" + err);\r\n//     }\r\n//     return user\r\n// }\r\n\r\n// async function deleteUser(username) {\r\n\r\n//     try {\r\n//         await db.from('users').delete('*').eq('username', username);\r\n//     } catch (err) {\r\n//         console.log(\"Connessione al database fallita: \" + err);\r\n//     }\r\n//     console.log(\"L'utente \" + username + \" è stato eliminato correttamente\");\r\n\r\n// }\r\n\r\n\r\nexport default function AdminPage() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        db.from('users').select().then((response) => {\r\n            setUsers(response.data);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            UTENTI\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Username</th>\r\n                        <th>Email</th>\r\n                        <th>Nome</th>\r\n                        <th>Cognome</th>\r\n                        <th>Data di Nascita</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user) => (\r\n                        <tr key={user.id}>\r\n                            <td>{user.username}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.surname}</td>\r\n                            <td>{user.birthday}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table >\r\n        </>\r\n    );\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA;AACA;AACA;;;;AAEA,MAAMC,EAAE,GAAGD,QAAX,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,eAAe,SAASE,SAAT,GAAqB;EAAA;;EAEhC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EAGAC,SAAS,CAAC,MAAM;IACZE,EAAE,CAACI,IAAH,CAAQ,OAAR,EAAiBC,MAAjB,GAA0BC,IAA1B,CAAgCC,QAAD,IAAc;MACzCJ,QAAQ,CAACI,QAAQ,CAACC,IAAV,CAAR;IACH,CAFD;EAGH,CAJQ,EAIN,EAJM,CAAT;EAOA,oBACI;IAAA,kCAEI;MAAA,wBACI;QAAA,uBACI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI;QAAA,UACKN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACP;UAAA,wBACI;YAAA,UAAKA,IAAI,CAACC;UAAV;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAKD,IAAI,CAACE;UAAV;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA,UAAKF,IAAI,CAACG;UAAV;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA,UAAKH,IAAI,CAACI;UAAV;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA,UAAKJ,IAAI,CAACK;UAAV;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA,GAASL,IAAI,CAACM,EAAd;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AA2BH;;GAvCuBf,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}