{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\components\\\\AdminPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './Database.js';\n/*\r\nPagina con table con tutti gli user, possibilità di cercare user e di modificare i dati\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = supabase;\n\nconst Table = _ref => {\n  let {\n    headers,\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(head => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: head\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(head => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[head]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}; // async function getUsers() {\n//     try{\n//         var users = await db.from('users').select('*');\n//     }catch(err){\n//         console.log(\"Connessione al database fallita: \" + err);\n//     }\n//     return users\n// }\n\n\n_c = Table;\n\nasync function getSingleUser(username) {\n  try {\n    var user = await db.from('users').select('*').eq('username', username);\n  } catch (err) {\n    console.log(\"Connessione al database fallita: \" + err);\n  }\n\n  return user;\n}\n\nasync function deleteUser(username) {\n  try {\n    await db.from('users').delete('*').eq('username', username);\n  } catch (err) {\n    console.log(\"Connessione al database fallita: \" + err);\n  }\n\n  console.log(\"L'utente \" + username + \" è stato eliminato correttamente\");\n}\n\nexport default async function AdminPage() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    db.from('users').select('*').then(response => {\n      setUsers(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Cognome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Data di Nascita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.surname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.birthday\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminPage, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c2 = AdminPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","db","Table","headers","data","map","head","row","getSingleUser","username","user","from","select","eq","err","console","log","deleteUser","delete","AdminPage","users","setUsers","then","response","email","name","surname","birthday","id"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/components/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from './Database.js'\r\n/*\r\nPagina con table con tutti gli user, possibilità di cercare user e di modificare i dati\r\n*/\r\n\r\nconst db = supabase;\r\n\r\nconst Table = ({ headers, data }) => {\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {headers.map(head => (\r\n                            <th>{head}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(row => (\r\n                        <tr>\r\n                            {headers.map(head => (\r\n                                <td>{row[head]}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n// async function getUsers() {\r\n//     try{\r\n//         var users = await db.from('users').select('*');\r\n//     }catch(err){\r\n//         console.log(\"Connessione al database fallita: \" + err);\r\n//     }\r\n\r\n//     return users\r\n// }\r\n\r\nasync function getSingleUser(username) {\r\n\r\n    try {\r\n        var user = await db.from('users').select('*').eq('username', username);\r\n    } catch (err) {\r\n        console.log(\"Connessione al database fallita: \" + err);\r\n    }\r\n    return user\r\n}\r\n\r\nasync function deleteUser(username) {\r\n\r\n    try {\r\n        await db.from('users').delete('*').eq('username', username);\r\n    } catch (err) {\r\n        console.log(\"Connessione al database fallita: \" + err);\r\n    }\r\n    console.log(\"L'utente \" + username + \" è stato eliminato correttamente\");\r\n\r\n}\r\n\r\n\r\nexport default async function AdminPage() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.from('users').select('*').then((response) => {\r\n            setUsers(response.data);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n        \r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Username</th>\r\n          <th>Email</th>\r\n          <th>Nome</th>\r\n          <th>Cognome</th>\r\n          <th>Data di Nascita</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map((user) => (\r\n          <tr key={user.id}>\r\n            <td>{user.username}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.surname}</td>\r\n            <td>{user.birthday}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table >\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}