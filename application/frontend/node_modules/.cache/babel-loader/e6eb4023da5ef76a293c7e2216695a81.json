{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Quiz\\\\QuizFinal.js\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Loading from \"./Loading.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"https://opentdb.com/api.php?amount=10&category=27\"; //const AppContext = React.createContext();\n\nexport default function QuizFinal() {\n  // const [loading, setLoading] = useState(false);\n  // const [questions, setQuestions] = useState([]);\n  // const [index, setIndex] = useState(0);\n  // const [correct, setCorrect] = useState(0);\n  // const [error, setError] = useState(false);\n  // const [isEndOpen, setIsEndOpen] = useState(false);\n  // const fetchQuestions = async (url) => {\n  //   setLoading(true);\n  //   const response = await axios(url).catch((err) => console.log(err));\n  //   if (response) {\n  //     const data = response.data.results;\n  //     if (data.length > 0) {\n  //       setQuestions(response.data.results);\n  //       setLoading(false);\n  //       setError(false);\n  //     } else {\n  //       setError(true);\n  //     }\n  //   } else {\n  //     setError(true);\n  //   }\n  // };\n  // const nextQuestion = () => {\n  //   setIndex((oldIndex) => {\n  //     const index = oldIndex + 1;\n  //     if (index > questions.length - 1) {\n  //       openEnd();\n  //       return 0;\n  //     } else {\n  //       return index;\n  //     }\n  //   });\n  // };\n  // const checkAnswer = (value) => {\n  //   if (value) {\n  //     setCorrect((oldState) => oldState + 1);\n  //   }\n  //   nextQuestion();\n  // };\n  // const openEnd = () => {\n  //   setIsEndOpen(true);\n  // };\n  // const closeEnd = () => {\n  //   setCorrect(0);\n  //   setIsEndOpen(false);\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   fetchQuestions(url);\n  // };\n  // if (loading) {\n  //   return <Loading />;\n  // }\n  // const { question, incorrect_answers, correct_answer } = questions[index];\n  // // const answers = [...incorrect_answers, correct_answer];\n  // let answers = [...incorrect_answers];\n  // const tempIndex = Math.floor(Math.random() * 4);\n  // if (tempIndex === 3) {\n  //   answers.push(correct_answer);\n  // } else {\n  //   answers.push(answers[tempIndex]);\n  //   answers[tempIndex] = correct_answer;\n  // }\n  return (\n    /*#__PURE__*/\n    //  <End />\n    _jsxDEV(_Fragment, {\n      children: [\"HELLO!\", /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmit,\n          className: \"submit-btn\",\n          children: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"quiz\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"correct-answers\",\n            children: [\"correct answers:\", correct, \"/\", index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              dangerouslySetInnerHTML: {\n                __html: question\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-container\",\n              children: answers.map((answer, index) => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"answer-btn\",\n                  onClick: () => {\n                    checkAnswer(correct_answer === answer);\n                  },\n                  dangerouslySetInnerHTML: {\n                    __html: answer\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-question\",\n            onClick: nextQuestion,\n            children: \"next question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n_c = QuizFinal;\n;\n/*\r\n  const End = () => {\r\n\r\n    return (\r\n      <div\r\n        className={`${isEndOpen ? \"End-container isOpen\" : \"End-container\"\r\n          }`}\r\n      >\r\n        <div className=\"End-content\">\r\n          <h2>congrats!</h2>\r\n          <p>\r\n            You answered {((correct / questions.length) * 100).toFixed(0)}% of\r\n            questions correctly\r\n          </p>\r\n          <button className=\"close-btn\" onClick={closeEnd}>\r\n            Play again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizFinal\");","map":{"version":3,"names":["axios","React","useState","Loading","url","QuizFinal","handleSubmit","correct","index","__html","question","answers","map","answer","checkAnswer","correct_answer","nextQuestion"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Quiz/QuizFinal.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Loading from \"./Loading.js\";\r\n\r\nconst url = \"https://opentdb.com/api.php?amount=10&category=27\";\r\n\r\n//const AppContext = React.createContext();\r\n\r\nexport default function QuizFinal() {\r\n  // const [loading, setLoading] = useState(false);\r\n  // const [questions, setQuestions] = useState([]);\r\n  // const [index, setIndex] = useState(0);\r\n  // const [correct, setCorrect] = useState(0);\r\n  // const [error, setError] = useState(false);\r\n\r\n  // const [isEndOpen, setIsEndOpen] = useState(false);\r\n\r\n\r\n  // const fetchQuestions = async (url) => {\r\n  //   setLoading(true);\r\n  //   const response = await axios(url).catch((err) => console.log(err));\r\n  //   if (response) {\r\n  //     const data = response.data.results;\r\n  //     if (data.length > 0) {\r\n  //       setQuestions(response.data.results);\r\n  //       setLoading(false);\r\n  //       setError(false);\r\n  //     } else {\r\n  //       setError(true);\r\n  //     }\r\n  //   } else {\r\n  //     setError(true);\r\n  //   }\r\n  // };\r\n\r\n  // const nextQuestion = () => {\r\n  //   setIndex((oldIndex) => {\r\n  //     const index = oldIndex + 1;\r\n  //     if (index > questions.length - 1) {\r\n  //       openEnd();\r\n  //       return 0;\r\n  //     } else {\r\n  //       return index;\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  // const checkAnswer = (value) => {\r\n  //   if (value) {\r\n  //     setCorrect((oldState) => oldState + 1);\r\n  //   }\r\n  //   nextQuestion();\r\n  // };\r\n\r\n  // const openEnd = () => {\r\n  //   setIsEndOpen(true);\r\n  // };\r\n\r\n  // const closeEnd = () => {\r\n  //   setCorrect(0);\r\n  //   setIsEndOpen(false);\r\n  // };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   fetchQuestions(url);\r\n  // };\r\n\r\n  // if (loading) {\r\n  //   return <Loading />;\r\n  // }\r\n  // const { question, incorrect_answers, correct_answer } = questions[index];\r\n  // // const answers = [...incorrect_answers, correct_answer];\r\n\r\n  // let answers = [...incorrect_answers];\r\n  // const tempIndex = Math.floor(Math.random() * 4);\r\n  // if (tempIndex === 3) {\r\n  //   answers.push(correct_answer);\r\n  // } else {\r\n  //   answers.push(answers[tempIndex]);\r\n  //   answers[tempIndex] = correct_answer;\r\n  // }\r\n\r\n  return (\r\n    //  <End />\r\n    <>\r\n    HELLO!\r\n      <body>\r\n      <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\r\n            start\r\n          </button>\r\n      \r\n        <section className=\"quiz\">\r\n          <p className=\"correct-answers\">\r\n            correct answers:{correct}/{index}\r\n          </p>\r\n          <article className=\"container\">\r\n            <h2 dangerouslySetInnerHTML={{ __html: question }} />\r\n            <div className=\"btn-container\">\r\n              {answers.map((answer, index) => {\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    className=\"answer-btn\"\r\n                    onClick={() => {\r\n                      checkAnswer(correct_answer === answer);\r\n                    }}\r\n                    dangerouslySetInnerHTML={{ __html: answer }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </article>\r\n          <button className=\"next-question\" onClick={nextQuestion}>\r\n            next question\r\n          </button>\r\n        </section>\r\n      </body>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n  const End = () => {\r\n\r\n    return (\r\n      <div\r\n        className={`${isEndOpen ? \"End-container isOpen\" : \"End-container\"\r\n          }`}\r\n      >\r\n        <div className=\"End-content\">\r\n          <h2>congrats!</h2>\r\n          <p>\r\n            You answered {((correct / questions.length) * 100).toFixed(0)}% of\r\n            questions correctly\r\n          </p>\r\n          <button className=\"close-btn\" onClick={closeEnd}>\r\n            Play again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n*/"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AAEA,MAAMC,GAAG,GAAG,mDAAZ,C,CAEA;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAClC;EACA;EACA;EACA;EACA;EAEA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;IAAA;IACE;IACA;MAAA,kCAEE;QAAA,wBACA;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEC,YAA/B;UAA6C,SAAS,EAAC,YAAvD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAKE;UAAS,SAAS,EAAC,MAAnB;UAAA,wBACE;YAAG,SAAS,EAAC,iBAAb;YAAA,+BACmBC,OADnB,OAC6BC,KAD7B;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAS,SAAS,EAAC,WAAnB;YAAA,wBACE;cAAI,uBAAuB,EAAE;gBAAEC,MAAM,EAAEC;cAAV;YAA7B;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAK,SAAS,EAAC,eAAf;cAAA,UACGC,OAAO,CAACC,GAAR,CAAY,CAACC,MAAD,EAASL,KAAT,KAAmB;gBAC9B,oBACE;kBAEE,SAAS,EAAC,YAFZ;kBAGE,OAAO,EAAE,MAAM;oBACbM,WAAW,CAACC,cAAc,KAAKF,MAApB,CAAX;kBACD,CALH;kBAME,uBAAuB,EAAE;oBAAEJ,MAAM,EAAEI;kBAAV;gBAN3B,GACOL,KADP;kBAAA;kBAAA;kBAAA;gBAAA,QADF;cAUD,CAXA;YADH;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAqBE;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAEQ,YAA3C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QArBF;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;EAFF;AAqCD;KAhHuBX,S;AAgHvB;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}