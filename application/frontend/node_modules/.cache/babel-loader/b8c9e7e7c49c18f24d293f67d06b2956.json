{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\userPages\\\\ProfileImage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../components/Database.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileImage(_ref) {\n  _s();\n\n  let {\n    url,\n    id,\n    size,\n    onUpload\n  } = _ref;\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  useEffect(() => {\n    if (url) downloadImage(url);\n  }, [url]);\n\n  const downloadImage = async path => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.storage.from('avatars').download(path);\n\n      if (error) {\n        throw error;\n      }\n\n      const url = URL.createObjectURL(data);\n      setAvatarUrl(url);\n    } catch (error) {\n      console.log('Error downloading image: ', error.message);\n    }\n  };\n\n  const uploadAvatar = async event => {\n    try {\n      setUploading(true);\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error('You must select an image to upload.');\n      }\n\n      const file = event.target.files[0];\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = `${fileName}`;\n      let {\n        error: uploadError\n      } = await supabase.storage.from('avatars').upload(filePath, file);\n\n      if (uploadError) {\n        throw uploadError;\n      }\n\n      onUpload(filePath);\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: size\n    },\n    \"aria-live\": \"polite\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`,\n      alt: avatarUrl ? 'Avatar' : 'No image',\n      className: \"avatar image\",\n      style: {\n        height: size,\n        width: size\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), uploading ? 'Uploading...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"button primary block\",\n        htmlFor: \"single\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Carica immagine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visually-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"single\",\n          accept: \"image/*\",\n          onChange: uploadAvatar,\n          disabled: uploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n  /*\r\n  const [avatarUrl, setAvatarUrl] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n    useEffect(() => {\r\n    if (url) downloadImage(url,id)\r\n  }, [url])\r\n    async function downloadImage(url,id) {\r\n    try {\r\n      const { data, error } = await supabase.storage.from('images').download(id+\"/\")  //list(id + \"/\", {limit:1,offset:0,sortBy:{column:\"name\",order:\"asc\"}}) //.download(path)\r\n      if (error) {\r\n        throw error\r\n      }\r\n      const url = URL.createObjectURL(data)\r\n      setAvatarUrl(url)\r\n      // await supabase.from('users').update({image:url}).eq(id,id)\r\n    } catch (error) {\r\n      console.log('Error downloading image: ', error.message)\r\n    }\r\n  }\r\n    const uploadAvatar = async (event) => {\r\n    try {\r\n      setUploading(true)\r\n        if (!event.target.files || event.target.files.length === 0) {\r\n        throw new Error('Devi selezionare un\\' immagine')\r\n      }\r\n        const file = event.target.files[0]\r\n      const fileExt = file.name.split('.').pop()\r\n      const fileName = `${Math.random()}.${fileExt}`\r\n      const filePath = `${fileName}`\r\n        let { data,error: uploadError } = await supabase.storage.from('images').upload(id + \"/\",file)\r\n        // let { error: uploadError } = await supabase.storage.from('images').upload(filePath, file)\r\n        if (uploadError) {\r\n        throw uploadError\r\n      }\r\n        // onUpload(filePath)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n    return (\r\n    <div style={{ width: size }} aria-live=\"polite\">\r\n      <br></br>\r\n      <img\r\n        src={avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`}\r\n        alt={avatarUrl ? 'Avatar' : 'No image'}\r\n        className=\"avatar image\"\r\n        style={{ height: size, width: size }}\r\n      />\r\n      {uploading ? (\r\n        'Uploading...'\r\n      ) : (\r\n        <>\r\n          <label className=\"button primary block\" htmlFor=\"single\">\r\n            Cambia immagine (CLICK)\r\n          </label>\r\n          {/* <Form.Group className=\"mb-3\" style={{maxWidth:\"500px\"}}>\r\n            </Form.Group> }\r\n          <div className=\"visually-hidden\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"single\"\r\n              accept=\"image/*\"\r\n              onChange={uploadAvatar}\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )*/\n}\n\n_s(ProfileImage, \"qetO0S4sK12MhteSMN3Wm563CZ4=\");\n\n_c = ProfileImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileImage\");","map":{"version":3,"names":["useEffect","useState","supabase","ProfileImage","url","id","size","onUpload","avatarUrl","setAvatarUrl","uploading","setUploading","downloadImage","path","data","error","storage","from","download","URL","createObjectURL","console","log","message","uploadAvatar","event","target","files","length","Error","file","fileExt","name","split","pop","fileName","Math","random","filePath","uploadError","upload","alert","width","height"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/userPages/ProfileImage.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { supabase } from '../components/Database.js'\r\n\r\nexport default function ProfileImage({ url, id, size, onUpload }) {\r\n  const [avatarUrl, setAvatarUrl] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (url) downloadImage(url)\r\n  }, [url])\r\n\r\n  const downloadImage = async (path) => {\r\n    try {\r\n      const { data, error } = await supabase.storage.from('avatars').download(path)\r\n      if (error) {\r\n        throw error\r\n      }\r\n      const url = URL.createObjectURL(data)\r\n      setAvatarUrl(url)\r\n    } catch (error) {\r\n      console.log('Error downloading image: ', error.message)\r\n    }\r\n  }\r\n\r\n  const uploadAvatar = async (event) => {\r\n    try {\r\n      setUploading(true)\r\n\r\n      if (!event.target.files || event.target.files.length === 0) {\r\n        throw new Error('You must select an image to upload.')\r\n      }\r\n\r\n      const file = event.target.files[0]\r\n      const fileExt = file.name.split('.').pop()\r\n      const fileName = `${Math.random()}.${fileExt}`\r\n      const filePath = `${fileName}`\r\n\r\n      let { error: uploadError } = await supabase.storage.from('avatars').upload(filePath, file)\r\n\r\n      if (uploadError) {\r\n        throw uploadError\r\n      }\r\n\r\n      onUpload(filePath)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: size }} aria-live=\"polite\">\r\n      <img\r\n        src={avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`}\r\n        alt={avatarUrl ? 'Avatar' : 'No image'}\r\n        className=\"avatar image\"\r\n        style={{ height: size, width: size }}\r\n      />\r\n      {uploading ? (\r\n        'Uploading...'\r\n      ) : (\r\n        <>\r\n        <br></br>\r\n          <label className=\"button primary block\" htmlFor=\"single\"><button>\r\n          Carica immagine\r\n          </button>\r\n          </label>\r\n          <div className=\"visually-hidden\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"single\"\r\n              accept=\"image/*\"\r\n              onChange={uploadAvatar}\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n  /*\r\n  const [avatarUrl, setAvatarUrl] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (url) downloadImage(url,id)\r\n  }, [url])\r\n\r\n  async function downloadImage(url,id) {\r\n    try {\r\n      const { data, error } = await supabase.storage.from('images').download(id+\"/\")  //list(id + \"/\", {limit:1,offset:0,sortBy:{column:\"name\",order:\"asc\"}}) //.download(path)\r\n      if (error) {\r\n        throw error\r\n      }\r\n      const url = URL.createObjectURL(data)\r\n      setAvatarUrl(url)\r\n      // await supabase.from('users').update({image:url}).eq(id,id)\r\n    } catch (error) {\r\n      console.log('Error downloading image: ', error.message)\r\n    }\r\n  }\r\n\r\n  const uploadAvatar = async (event) => {\r\n    try {\r\n      setUploading(true)\r\n\r\n      if (!event.target.files || event.target.files.length === 0) {\r\n        throw new Error('Devi selezionare un\\' immagine')\r\n      }\r\n\r\n      const file = event.target.files[0]\r\n      const fileExt = file.name.split('.').pop()\r\n      const fileName = `${Math.random()}.${fileExt}`\r\n      const filePath = `${fileName}`\r\n\r\n      let { data,error: uploadError } = await supabase.storage.from('images').upload(id + \"/\",file)\r\n\r\n      // let { error: uploadError } = await supabase.storage.from('images').upload(filePath, file)\r\n\r\n      if (uploadError) {\r\n        throw uploadError\r\n      }\r\n\r\n      // onUpload(filePath)\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: size }} aria-live=\"polite\">\r\n      <br></br>\r\n      <img\r\n        src={avatarUrl ? avatarUrl : `https://place-hold.it/${size}x${size}`}\r\n        alt={avatarUrl ? 'Avatar' : 'No image'}\r\n        className=\"avatar image\"\r\n        style={{ height: size, width: size }}\r\n      />\r\n      {uploading ? (\r\n        'Uploading...'\r\n      ) : (\r\n        <>\r\n          <label className=\"button primary block\" htmlFor=\"single\">\r\n            Cambia immagine (CLICK)\r\n          </label>\r\n          {/* <Form.Group className=\"mb-3\" style={{maxWidth:\"500px\"}}>\r\n\r\n          </Form.Group> }\r\n          <div className=\"visually-hidden\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"single\"\r\n              accept=\"image/*\"\r\n              onChange={uploadAvatar}\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )*/\r\n}"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,2BAAzB;;;AAEA,eAAe,SAASC,YAAT,OAAmD;EAAA;;EAAA,IAA7B;IAAEC,GAAF;IAAOC,EAAP;IAAWC,IAAX;IAAiBC;EAAjB,CAA6B;EAChE,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,IAAII,GAAJ,EAASQ,aAAa,CAACR,GAAD,CAAb;EACV,CAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;;EAIA,MAAMQ,aAAa,GAAG,MAAOC,IAAP,IAAgB;IACpC,IAAI;MACF,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAMb,QAAQ,CAACc,OAAT,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiCC,QAAjC,CAA0CL,IAA1C,CAA9B;;MACA,IAAIE,KAAJ,EAAW;QACT,MAAMA,KAAN;MACD;;MACD,MAAMX,GAAG,GAAGe,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAZ;MACAL,YAAY,CAACL,GAAD,CAAZ;IACD,CAPD,CAOE,OAAOW,KAAP,EAAc;MACdM,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCP,KAAK,CAACQ,OAA/C;IACD;EACF,CAXD;;EAaA,MAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;IACpC,IAAI;MACFd,YAAY,CAAC,IAAD,CAAZ;;MAEA,IAAI,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,IAAuBF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAzD,EAA4D;QAC1D,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAGL,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;MACA,MAAMI,OAAO,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,EAAhB;MACA,MAAMC,QAAQ,GAAI,GAAEC,IAAI,CAACC,MAAL,EAAc,IAAGN,OAAQ,EAA7C;MACA,MAAMO,QAAQ,GAAI,GAAEH,QAAS,EAA7B;MAEA,IAAI;QAAEpB,KAAK,EAAEwB;MAAT,IAAyB,MAAMrC,QAAQ,CAACc,OAAT,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiCuB,MAAjC,CAAwCF,QAAxC,EAAkDR,IAAlD,CAAnC;;MAEA,IAAIS,WAAJ,EAAiB;QACf,MAAMA,WAAN;MACD;;MAEDhC,QAAQ,CAAC+B,QAAD,CAAR;IACD,CAnBD,CAmBE,OAAOvB,KAAP,EAAc;MACd0B,KAAK,CAAC1B,KAAK,CAACQ,OAAP,CAAL;IACD,CArBD,SAqBU;MACRZ,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAzBD;;EA2BA,oBACE;IAAK,KAAK,EAAE;MAAE+B,KAAK,EAAEpC;IAAT,CAAZ;IAA6B,aAAU,QAAvC;IAAA,wBACE;MACE,GAAG,EAAEE,SAAS,GAAGA,SAAH,GAAgB,yBAAwBF,IAAK,IAAGA,IAAK,EADrE;MAEE,GAAG,EAAEE,SAAS,GAAG,QAAH,GAAc,UAF9B;MAGE,SAAS,EAAC,cAHZ;MAIE,KAAK,EAAE;QAAEmC,MAAM,EAAErC,IAAV;QAAgBoC,KAAK,EAAEpC;MAAvB;IAJT;MAAA;MAAA;MAAA;IAAA,QADF,EAOGI,SAAS,GACR,cADQ,gBAGR;MAAA,wBACA;QAAA;QAAA;QAAA;MAAA,QADA,eAEE;QAAO,SAAS,EAAC,sBAAjB;QAAwC,OAAO,EAAC,QAAhD;QAAA,uBAAyD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAzD;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,QAFL;UAGE,MAAM,EAAC,SAHT;UAIE,QAAQ,EAAEc,YAJZ;UAKE,QAAQ,EAAEd;QALZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA,gBAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;EA8BA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYC;;GAjKuBP,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}