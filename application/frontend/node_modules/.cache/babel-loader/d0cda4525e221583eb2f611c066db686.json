{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Quiz\\\\QuizFinal.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Loading from \"./Loading.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"https://opentdb.com/api.php?amount=10&category=27\";\nexport default function QuizFinal() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [isEndOpen, setIsEndOpen] = useState(false);\n\n  const fetchQuestions = async url => {\n    setLoading(true);\n    const response = await axios(url).catch(err => console.log(err));\n\n    if (response) {\n      const data = response.data.results;\n\n      if (data.length > 0) {\n        setQuestions(response.data.results);\n        setLoading(false);\n        setError(false);\n      } else {\n        setError(true);\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  const nextQuestion = async () => {\n    await setIndex(oldIndex => {\n      const index = oldIndex + 1;\n\n      if (index > questions.length() - 1) {\n        openEnd();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n\n  const checkAnswer = value => {\n    if (value) {\n      setCorrect(oldState => oldState + 1);\n    }\n\n    nextQuestion();\n  };\n\n  const openEnd = () => {\n    setIsEndOpen(true);\n  };\n\n  const closeEnd = () => {\n    setCorrect(0);\n    setIsEndOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchQuestions(url);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    question,\n    incorrect_answers,\n    correct_answer\n  } = questions[index]; // const answers = [...incorrect_answers, correct_answer];\n\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n\n  return (\n    /*#__PURE__*/\n    //  <End />\n    _jsxDEV(_Fragment, {\n      children: [\"HELLO!\", /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmit,\n          className: \"submit-btn\",\n          children: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"quiz\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"correct-answers\",\n            children: [\"correct answers:\", correct, \"/\", index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              dangerouslySetInnerHTML: {\n                __html: question\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-container\",\n              children: answers.map((answer, index) => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"answer-btn\",\n                  onClick: () => {\n                    checkAnswer(correct_answer === answer);\n                  },\n                  dangerouslySetInnerHTML: {\n                    __html: answer\n                  }\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-question\",\n            onClick: nextQuestion,\n            children: \"next question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(QuizFinal, \"PEASibgkmyDSRd1RHXYolGAAcLg=\");\n\n_c = QuizFinal;\n;\n/*\r\n  const End = () => {\r\n\r\n    return (\r\n      <div\r\n        className={`${isEndOpen ? \"End-container isOpen\" : \"End-container\"\r\n          }`}\r\n      >\r\n        <div className=\"End-content\">\r\n          <h2>congrats!</h2>\r\n          <p>\r\n            You answered {((correct / questions.length) * 100).toFixed(0)}% of\r\n            questions correctly\r\n          </p>\r\n          <button className=\"close-btn\" onClick={closeEnd}>\r\n            Play again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizFinal\");","map":{"version":3,"names":["axios","React","useState","Loading","url","QuizFinal","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isEndOpen","setIsEndOpen","fetchQuestions","response","catch","err","console","log","data","results","length","nextQuestion","oldIndex","openEnd","checkAnswer","value","oldState","closeEnd","handleSubmit","e","preventDefault","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","__html","map","answer"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Quiz/QuizFinal.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Loading from \"./Loading.js\";\r\n\r\nconst url = \"https://opentdb.com/api.php?amount=10&category=27\";\r\n\r\nexport default function QuizFinal() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [isEndOpen, setIsEndOpen] = useState(false);\r\n\r\n\r\n  const fetchQuestions = async (url) => {\r\n    setLoading(true);\r\n    const response = await axios(url).catch((err) => console.log(err));\r\n    if (response) {\r\n      const data = response.data.results;\r\n      if (data.length > 0) {\r\n        setQuestions(response.data.results);\r\n        setLoading(false);\r\n        setError(false);\r\n      } else {\r\n        setError(true);\r\n      }\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = async() => {\r\n    await setIndex((oldIndex) => {\r\n      const index = oldIndex + 1;\r\n      if (index > questions.length() - 1) {\r\n        openEnd();\r\n        return 0;\r\n      } else {\r\n        return index;\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkAnswer = (value) => {\r\n    if (value) {\r\n      setCorrect((oldState) => oldState + 1);\r\n    }\r\n    nextQuestion();\r\n  };\r\n\r\n  const openEnd = () => {\r\n    setIsEndOpen(true);\r\n  };\r\n\r\n  const closeEnd = () => {\r\n    setCorrect(0);\r\n    setIsEndOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchQuestions(url);\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  const { question, incorrect_answers, correct_answer } = questions[index];\r\n  // const answers = [...incorrect_answers, correct_answer];\r\n\r\n  let answers = [...incorrect_answers];\r\n  const tempIndex = Math.floor(Math.random() * 4);\r\n  if (tempIndex === 3) {\r\n    answers.push(correct_answer);\r\n  } else {\r\n    answers.push(answers[tempIndex]);\r\n    answers[tempIndex] = correct_answer;\r\n  }\r\n\r\n  return (\r\n    //  <End />\r\n    <>\r\n    HELLO!\r\n      <body>\r\n      <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\r\n            start\r\n          </button>\r\n      \r\n        <section className=\"quiz\">\r\n          <p className=\"correct-answers\">\r\n            correct answers:{correct}/{index}\r\n          </p>\r\n          <article className=\"container\">\r\n            <h2 dangerouslySetInnerHTML={{ __html: question }} />\r\n            <div className=\"btn-container\">\r\n              {answers.map((answer, index) => {\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    className=\"answer-btn\"\r\n                    onClick={() => {\r\n                      checkAnswer(correct_answer === answer);\r\n                    }}\r\n                    dangerouslySetInnerHTML={{ __html: answer }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </article>\r\n          <button className=\"next-question\" onClick={nextQuestion}>\r\n            next question\r\n          </button>\r\n        </section>\r\n      </body>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n  const End = () => {\r\n\r\n    return (\r\n      <div\r\n        className={`${isEndOpen ? \"End-container isOpen\" : \"End-container\"\r\n          }`}\r\n      >\r\n        <div className=\"End-content\">\r\n          <h2>congrats!</h2>\r\n          <p>\r\n            You answered {((correct / questions.length) * 100).toFixed(0)}% of\r\n            questions correctly\r\n          </p>\r\n          <button className=\"close-btn\" onClick={closeEnd}>\r\n            Play again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}