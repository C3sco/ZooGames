{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../components/Database.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst db = supabase;\n\nconst CreatePost = _ref => {\n  _s();\n\n  let {\n    session\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [successAlert, setSuccessAlert] = useState('');\n  const [bodyError, setBodyError] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [categoryError, setCategoryError] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (category === '') {\n      setCategoryError('Perfavore seleziona una categoria');\n      setBodyError('');\n      setTitleError('');\n      return;\n    } else if (title === '') {\n      setTitleError('Perfavore inserisci un titolo');\n      setCategoryError('');\n      setBodyError('');\n      return;\n    } else if (body === '') {\n      setBodyError('Perfavore inserisci una descrizione');\n      setCategoryError('');\n      setTitleError('');\n      return;\n    } else {\n      setTitleError('');\n      setBodyError('');\n      setCategoryError('');\n    }\n\n    await supabase.from('posts').insert({\n      title: title,\n      content: body,\n      category: category\n    });\n    setTitle('');\n    setBody('');\n    setCategory('');\n    setImage('');\n    setSuccessAlert('Post creato con successo!');\n  };\n};\n\n_s(CreatePost, \"LEe4/Fw6zO34hJiG3mg+WP6HmCs=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","supabase","db","CreatePost","session","posts","setPosts","title","setTitle","body","setBody","image","setImage","category","setCategory","categoryFilter","setCategoryFilter","successAlert","setSuccessAlert","bodyError","setBodyError","titleError","setTitleError","categoryError","setCategoryError","handleSubmit","e","preventDefault","from","insert","content"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/userPages/CreatePost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { supabase } from '../components/Database.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst db = supabase\r\n\r\n\r\nconst CreatePost = ({ session }) => {\r\n\r\n    const [posts, setPosts] = useState([])\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [category, setCategory] = useState('')\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState('')\r\n    const [successAlert, setSuccessAlert] = useState('')\r\n\r\n    const [bodyError, setBodyError] = useState('')\r\n    const [titleError, setTitleError] = useState('')\r\n    const [categoryError, setCategoryError] = useState('')\r\nconst handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (category === '') {\r\n        setCategoryError('Perfavore seleziona una categoria')\r\n        setBodyError('')\r\n        setTitleError('')\r\n        return\r\n    } else if (title === '') {\r\n        setTitleError('Perfavore inserisci un titolo')\r\n        setCategoryError('')\r\n        setBodyError('')\r\n        return\r\n    } else if (body === '') {\r\n        setBodyError('Perfavore inserisci una descrizione')\r\n        setCategoryError('')\r\n        setTitleError('')\r\n        return\r\n    } else {\r\n        setTitleError('')\r\n        setBodyError('')\r\n        setCategoryError('')\r\n    }\r\n\r\n    await supabase.from('posts').insert({ title: title,content: body,category: category })\r\n\r\n    setTitle('')\r\n    setBody('')\r\n    setCategory('')\r\n    setImage('')\r\n    setSuccessAlert('Post creato con successo!')\r\n}\r\n}\r\nexport default CreatePost"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,sCAAP;AAEA,MAAMC,EAAE,GAAGD,QAAX;;AAGA,MAAME,UAAU,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAEhC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;EAEA,MAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAlD;;EACJ,MAAM0B,YAAY,GAAG,MAAOC,CAAP,IAAa;IAC9BA,CAAC,CAACC,cAAF;;IACA,IAAId,QAAQ,KAAK,EAAjB,EAAqB;MACjBW,gBAAgB,CAAC,mCAAD,CAAhB;MACAJ,YAAY,CAAC,EAAD,CAAZ;MACAE,aAAa,CAAC,EAAD,CAAb;MACA;IACH,CALD,MAKO,IAAIf,KAAK,KAAK,EAAd,EAAkB;MACrBe,aAAa,CAAC,+BAAD,CAAb;MACAE,gBAAgB,CAAC,EAAD,CAAhB;MACAJ,YAAY,CAAC,EAAD,CAAZ;MACA;IACH,CALM,MAKA,IAAIX,IAAI,KAAK,EAAb,EAAiB;MACpBW,YAAY,CAAC,qCAAD,CAAZ;MACAI,gBAAgB,CAAC,EAAD,CAAhB;MACAF,aAAa,CAAC,EAAD,CAAb;MACA;IACH,CALM,MAKA;MACHA,aAAa,CAAC,EAAD,CAAb;MACAF,YAAY,CAAC,EAAD,CAAZ;MACAI,gBAAgB,CAAC,EAAD,CAAhB;IACH;;IAED,MAAMvB,QAAQ,CAAC2B,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B;MAAEtB,KAAK,EAAEA,KAAT;MAAeuB,OAAO,EAAErB,IAAxB;MAA6BI,QAAQ,EAAEA;IAAvC,CAA9B,CAAN;IAEAL,QAAQ,CAAC,EAAD,CAAR;IACAE,OAAO,CAAC,EAAD,CAAP;IACAI,WAAW,CAAC,EAAD,CAAX;IACAF,QAAQ,CAAC,EAAD,CAAR;IACAM,eAAe,CAAC,2BAAD,CAAf;EACH,CA9BD;AA+BC,CA7CD;;GAAMf,U;;KAAAA,U;AA8CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}