{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from './Auth.js';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef(); // Get signUp function from the auth context\n\n  const {\n    signIn\n  } = useAuth();\n  const history = useNavigate();\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // Get email and password input values\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value; // Calls `signIn` function from the context\n\n    const {\n      error\n    } = await signIn({\n      email,\n      password\n    });\n\n    if (error) {\n      alert('error signing in');\n    } else {\n      // Redirect user to Dashboard\n      history.push('/');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"HEllo!\"\n  }, void 0, false);\n}\n/*\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from './Database.js'\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState('');\r\n    const history = useNavigate();\r\n \r\n    const Auth = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            var user = await supabase\r\n            .from('users')\r\n            .select('*')\r\n            .where('email',email)\r\n            .andWhere('password',password)\r\n            \r\n            await axios.get('http://localhost:3000/users', {\r\n                email: email,\r\n                password: password\r\n            }); \r\n            if(user.data.length>0){\r\n              //dentro\r\n            }else{\r\n              \r\n            }\r\n            history.push(\"/components/Dashboard\");\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setMsg(error.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n \r\n    return (\r\n        <section className=\"hero has-background-grey-light is-fullheight is-fullwidth\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"columns is-centered\">\r\n                        <div className=\"column is-4-desktop\">\r\n                            <form onSubmit={Auth} className=\"box\">\r\n                                <p className=\"has-text-centered\">{msg}</p>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Email or Username</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"text\" className=\"input\" placeholder=\"Username\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Password</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"password\" className=\"input\" placeholder=\"******\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <button className=\"button is-success is-fullwidth\">Login</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n \r\nexport default Login */\n\n_s(Login, \"i8CV2/7W5tWng0rzhjbhsRvJFJk=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useNavigate","Link","useAuth","Login","emailRef","passwordRef","signIn","history","handleSubmit","e","preventDefault","email","current","value","password","error","alert","push"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/components/Login.js"],"sourcesContent":["import { useRef, useState } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { useAuth } from './Auth.js'\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n\r\n  // Get signUp function from the auth context\r\n  const { signIn } = useAuth()\r\n\r\n  const history = useNavigate()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    // Get email and password input values\r\n    const email = emailRef.current.value\r\n    const password = passwordRef.current.value\r\n\r\n    // Calls `signIn` function from the context\r\n    const { error } = await signIn({ email, password })\r\n\r\n    if (error) {\r\n      alert('error signing in')\r\n    } else {\r\n      // Redirect user to Dashboard\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      HEllo!\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from './Database.js'\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState('');\r\n    const history = useNavigate();\r\n \r\n    const Auth = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            var user = await supabase\r\n            .from('users')\r\n            .select('*')\r\n            .where('email',email)\r\n            .andWhere('password',password)\r\n            \r\n            await axios.get('http://localhost:3000/users', {\r\n                email: email,\r\n                password: password\r\n            }); \r\n            if(user.data.length>0){\r\n              //dentro\r\n            }else{\r\n              \r\n            }\r\n            history.push(\"/components/Dashboard\");\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setMsg(error.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n \r\n    return (\r\n        <section className=\"hero has-background-grey-light is-fullheight is-fullwidth\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"columns is-centered\">\r\n                        <div className=\"column is-4-desktop\">\r\n                            <form onSubmit={Auth} className=\"box\">\r\n                                <p className=\"has-text-centered\">{msg}</p>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Email or Username</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"text\" className=\"input\" placeholder=\"Username\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <label className=\"label\">Password</label>\r\n                                    <div className=\"controls\">\r\n                                        <input type=\"password\" className=\"input\" placeholder=\"******\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field mt-5\">\r\n                                    <button className=\"button is-success is-fullwidth\">Login</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n \r\nexport default Login */"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC9B,MAAMC,QAAQ,GAAGN,MAAM,EAAvB;EACA,MAAMO,WAAW,GAAGP,MAAM,EAA1B,CAF8B,CAI9B;;EACA,MAAM;IAAEQ;EAAF,IAAaJ,OAAO,EAA1B;EAEA,MAAMK,OAAO,GAAGP,WAAW,EAA3B;;EAEA,eAAeQ,YAAf,CAA4BC,CAA5B,EAA+B;IAC7BA,CAAC,CAACC,cAAF,GAD6B,CAG7B;;IACA,MAAMC,KAAK,GAAGP,QAAQ,CAACQ,OAAT,CAAiBC,KAA/B;IACA,MAAMC,QAAQ,GAAGT,WAAW,CAACO,OAAZ,CAAoBC,KAArC,CAL6B,CAO7B;;IACA,MAAM;MAAEE;IAAF,IAAY,MAAMT,MAAM,CAAC;MAAEK,KAAF;MAASG;IAAT,CAAD,CAA9B;;IAEA,IAAIC,KAAJ,EAAW;MACTC,KAAK,CAAC,kBAAD,CAAL;IACD,CAFD,MAEO;MACL;MACAT,OAAO,CAACU,IAAR,CAAa,GAAb;IACD;EACF;;EAED,oBACE;IAAA;EAAA,iBADF;AAKD;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA3GwBd,K;UAKHD,O,EAEHF,W;;;KAPMG,K"},"metadata":{},"sourceType":"module"}