{"ast":null,"code":"export class FunctionsError extends Error {\n  constructor(message) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'FunctionsError';\n    let context = arguments.length > 2 ? arguments[2] : undefined;\n    super(message);\n    super.name = name;\n    this.context = context;\n  }\n\n}\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n  }\n\n}\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n  }\n\n}\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n  }\n\n}","map":{"version":3,"mappings":"AAgBA,OAAM,MAAOA,cAAP,SAA8BC,KAA9B,CAAmC;EAEvCC,YAAYC,OAAZ,EAAmE;IAAA,IAAtCC,IAAsC,uEAA/B,gBAA+B;IAAA,IAAbC,OAAa;IACjE,MAAMF,OAAN;IACA,MAAMC,IAAN,GAAaA,IAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;;AANsC;AASzC,OAAM,MAAOC,mBAAP,SAAmCN,cAAnC,CAAiD;EACrDE,YAAYG,OAAZ,EAAwB;IACtB,MAAM,+CAAN,EAAuD,qBAAvD,EAA8EA,OAA9E;EACD;;AAHoD;AAMvD,OAAM,MAAOE,mBAAP,SAAmCP,cAAnC,CAAiD;EACrDE,YAAYG,OAAZ,EAAwB;IACtB,MAAM,wCAAN,EAAgD,qBAAhD,EAAuEA,OAAvE;EACD;;AAHoD;AAMvD,OAAM,MAAOG,kBAAP,SAAkCR,cAAlC,CAAgD;EACpDE,YAAYG,OAAZ,EAAwB;IACtB,MAAM,8CAAN,EAAsD,oBAAtD,EAA4EA,OAA5E;EACD;;AAHmD","names":["FunctionsError","Error","constructor","message","name","context","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError"],"sources":["D:\\Documenti\\GitHub\\ZooGames\\application\\frontend\\node_modules\\@supabase\\functions-js\\src\\types.ts"],"sourcesContent":["export type Fetch = typeof fetch\n\n/**\n * Response format\n *\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    super.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * object representing the headers to send with the request\n   * */\n  headers?: { [key: string]: string }\n  /**\n   * the body of the request\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n}\n"]},"metadata":{},"sourceType":"module"}