{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Impiccato\\\\ImpiccatoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header.js';\nimport Figure from './Figure.js';\nimport WrongLetters from './WrongLetters.js';\nimport Word from './Word.js';\nimport Popup from './Popup.js';\nimport Notification from './Notification.js';\nimport { showNotification as show, checkWin } from './helpers.js';\nimport './impiccato.css';\nimport { supabase } from '../../components/Database.js';\nimport Loading from '../../components/Loading.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst db = supabase;\n\nfunction Impiccato(_ref) {\n  _s();\n\n  let {\n    session\n  } = _ref;\n  const [words, setWords] = useState([]);\n  const [selectedWord, setRandomWord] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [points, setScore] = useState(null);\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [scoreUpdated, setScoreUpdated] = useState(true);\n  let id;\n\n  if (session != null) {\n    id = session.user.id;\n  }\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const response = await db.from('animals').select();\n        setWords(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWords();\n  }, []);\n  useEffect(() => {\n    if (!loading && words.length > 0) {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\n    }\n  }, [words, loading]);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    if (!loading && words.length > 0) {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\n    }\n  }\n\n  let contents;\n\n  if (loading) {\n    contents = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  } else {\n    contents = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(Figure, {\n          wrongLetters: wrongLetters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n          wrongLetters: wrongLetters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Word, {\n          selectedWord: selectedWord,\n          correctLetters: correctLetters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        correctLetters: correctLetters,\n        wrongLetters: wrongLetters,\n        selectedWord: selectedWord,\n        setPlayable: setPlayable,\n        playAgain: playAgain,\n        score: points,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        showNotification: showNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: contents\n  }, void 0, false);\n}\n\n_s(Impiccato, \"VAGrg5cCWYjnIecczD4qqhnYUeI=\");\n\n_c = Impiccato;\nexport default Impiccato;\n\nvar _c;\n\n$RefreshReg$(_c, \"Impiccato\");","map":{"version":3,"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","showNotification","show","checkWin","supabase","Loading","db","Impiccato","session","words","setWords","selectedWord","setRandomWord","loading","setLoading","points","setScore","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","scoreUpdated","setScoreUpdated","id","user","fetchWords","response","from","select","data","error","console","length","randomIndex","Math","floor","random","Nome","toLowerCase","handleKeydown","event","key","keyCode","letter","includes","currentLetters","window","addEventListener","removeEventListener","playAgain","contents"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Impiccato/ImpiccatoPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header.js';\r\nimport Figure from './Figure.js';\r\nimport WrongLetters from './WrongLetters.js';\r\nimport Word from './Word.js';\r\nimport Popup from './Popup.js';\r\nimport Notification from './Notification.js';\r\nimport { showNotification as show, checkWin } from './helpers.js';\r\nimport './impiccato.css';\r\nimport { supabase } from '../../components/Database.js';\r\nimport Loading from '../../components/Loading.js';\r\n\r\nconst db = supabase;\r\n\r\nfunction Impiccato({ session }) {\r\n  const [words, setWords] = useState([]);\r\n  const [selectedWord, setRandomWord] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [points, setScore] = useState(null);\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [scoreUpdated, setScoreUpdated] = useState(true)\r\n\r\n  let id;\r\n  if (session != null) {\r\n    id = session.user.id;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchWords = async () => {\r\n      try {\r\n        const response = await db.from('animals').select();\r\n        setWords(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchWords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading && words.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * words.length);\r\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\r\n    }\r\n  }, [words, loading]);\r\n\r\n  useEffect(() => {\r\n\r\n    const handleKeydown = event => {\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable]);\r\n\r\n  function playAgain() {\r\n    setPlayable(true);\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n\r\n    if (!loading && words.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * words.length);\r\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\r\n    }\r\n  }\r\n\r\n  let contents;\r\n  if (loading) {\r\n    contents = <Loading />\r\n  } else {\r\n    contents =\r\n      <div>\r\n        <Header />\r\n        <div className=\"game-container\">\r\n          <Figure wrongLetters={wrongLetters} />\r\n          <WrongLetters wrongLetters={wrongLetters} />\r\n          <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n        </div>\r\n        <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} score={points} id={id} />\r\n        <Notification showNotification={showNotification} />\r\n      </div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {contents}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Impiccato;  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,gBAAgB,IAAIC,IAA7B,EAAmCC,QAAnC,QAAmD,cAAnD;AACA,OAAO,iBAAP;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,EAAE,GAAGF,QAAX;;AAEA,SAASG,SAAT,OAAgC;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACkB,YAAD,EAAeC,aAAf,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACsB,MAAD,EAASC,QAAT,IAAqBvB,QAAQ,CAAC,IAAD,CAAnC;EACA,MAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAAC0B,cAAD,EAAiBC,iBAAjB,IAAsC3B,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACQ,gBAAD,EAAmBsB,mBAAnB,IAA0C9B,QAAQ,CAAC,KAAD,CAAxD;EACA,MAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,IAAD,CAAhD;EAEA,IAAIiC,EAAJ;;EACA,IAAIlB,OAAO,IAAI,IAAf,EAAqB;IACnBkB,EAAE,GAAGlB,OAAO,CAACmB,IAAR,CAAaD,EAAlB;EACD;;EAEDhC,SAAS,CAAC,MAAM;IACd,MAAMkC,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMvB,EAAE,CAACwB,IAAH,CAAQ,SAAR,EAAmBC,MAAnB,EAAvB;QACArB,QAAQ,CAACmB,QAAQ,CAACG,IAAV,CAAR;QACAlB,UAAU,CAAC,KAAD,CAAV;MACD,CAJD,CAIE,OAAOmB,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACD;IACF,CARD;;IASAL,UAAU;EACX,CAXQ,EAWN,EAXM,CAAT;EAaAlC,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,OAAD,IAAYJ,KAAK,CAAC0B,MAAN,GAAe,CAA/B,EAAkC;MAChC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB9B,KAAK,CAAC0B,MAAjC,CAApB;MACAvB,aAAa,CAACH,KAAK,CAAC2B,WAAD,CAAL,CAAmBI,IAAnB,CAAwBC,WAAxB,EAAD,CAAb;IACD;EACF,CALQ,EAKN,CAAChC,KAAD,EAAQI,OAAR,CALM,CAAT;EAOAnB,SAAS,CAAC,MAAM;IAEd,MAAMgD,aAAa,GAAGC,KAAK,IAAI;MAC7B,MAAM;QAAEC,GAAF;QAAOC;MAAP,IAAmBF,KAAzB;;MACA,IAAI1B,QAAQ,IAAI4B,OAAO,IAAI,EAAvB,IAA6BA,OAAO,IAAI,EAA5C,EAAgD;QAC9C,MAAMC,MAAM,GAAGF,GAAG,CAACH,WAAJ,EAAf;;QACA,IAAI9B,YAAY,CAACoC,QAAb,CAAsBD,MAAtB,CAAJ,EAAmC;UACjC,IAAI,CAAC3B,cAAc,CAAC4B,QAAf,CAAwBD,MAAxB,CAAL,EAAsC;YACpC1B,iBAAiB,CAAC4B,cAAc,IAAI,CAAC,GAAGA,cAAJ,EAAoBF,MAApB,CAAnB,CAAjB;UACD,CAFD,MAEO;YACL5C,IAAI,CAACqB,mBAAD,CAAJ;UACD;QACF,CAND,MAMO;UACL,IAAI,CAACF,YAAY,CAAC0B,QAAb,CAAsBD,MAAtB,CAAL,EAAoC;YAClCxB,eAAe,CAAC0B,cAAc,IAAI,CAAC,GAAGA,cAAJ,EAAoBF,MAApB,CAAnB,CAAf;UACD,CAFD,MAEO;YACL5C,IAAI,CAACqB,mBAAD,CAAJ;UACD;QACF;MACF;IACF,CAlBD;;IAmBA0B,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCR,aAAnC;IAEA,OAAO,MAAMO,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCT,aAAtC,CAAb;EACD,CAxBQ,EAwBN,CAACvB,cAAD,EAAiBE,YAAjB,EAA+BJ,QAA/B,CAxBM,CAAT;;EA0BA,SAASmC,SAAT,GAAqB;IACnBlC,WAAW,CAAC,IAAD,CAAX;IACAE,iBAAiB,CAAC,EAAD,CAAjB;IACAE,eAAe,CAAC,EAAD,CAAf;;IAEA,IAAI,CAACT,OAAD,IAAYJ,KAAK,CAAC0B,MAAN,GAAe,CAA/B,EAAkC;MAChC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB9B,KAAK,CAAC0B,MAAjC,CAApB;MACAvB,aAAa,CAACH,KAAK,CAAC2B,WAAD,CAAL,CAAmBI,IAAnB,CAAwBC,WAAxB,EAAD,CAAb;IACD;EACF;;EAED,IAAIY,QAAJ;;EACA,IAAIxC,OAAJ,EAAa;IACXwC,QAAQ,gBAAG,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAX;EACD,CAFD,MAEO;IACLA,QAAQ,gBACN;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE,QAAC,MAAD;UAAQ,YAAY,EAAEhC;QAAtB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,YAAD;UAAc,YAAY,EAAEA;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,IAAD;UAAM,YAAY,EAAEV,YAApB;UAAkC,cAAc,EAAEQ;QAAlD;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE,QAAC,KAAD;QAAO,cAAc,EAAEA,cAAvB;QAAuC,YAAY,EAAEE,YAArD;QAAmE,YAAY,EAAEV,YAAjF;QAA+F,WAAW,EAAEO,WAA5G;QAAyH,SAAS,EAAEkC,SAApI;QAA+I,KAAK,EAAErC,MAAtJ;QAA8J,EAAE,EAAEW;MAAlK;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE,QAAC,YAAD;QAAc,gBAAgB,EAAEzB;MAAhC;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;EAED,oBACE;IAAA,UACCoD;EADD,iBADF;AAKD;;GA/FQ9C,S;;KAAAA,S;AAkGT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}