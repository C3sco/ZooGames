{"ast":null,"code":"export class AuthError extends Error {\n  constructor(message) {\n    super(message);\n    this.__isAuthError = true;\n    this.name = 'AuthError';\n  }\n\n}\nexport function isAuthError(error) {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n  constructor(message, status) {\n    super(message);\n    this.name = 'AuthApiError';\n    this.status = status;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status\n    };\n  }\n\n}\nexport function isAuthApiError(error) {\n  return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n  constructor(message, originalError) {\n    super(message);\n    this.name = 'AuthUnknownError';\n    this.originalError = originalError;\n  }\n\n}\nexport class CustomAuthError extends AuthError {\n  constructor(message, name, status) {\n    super(message);\n    this.name = name;\n    this.status = status;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status\n    };\n  }\n\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400);\n  }\n\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message) {\n    super(message, 'AuthInvalidCredentialsError', 400);\n  }\n\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  constructor(message) {\n    let details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(message, 'AuthImplicitGrantRedirectError', 500);\n    this.details = null;\n    this.details = details;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details\n    };\n  }\n\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message, status) {\n    super(message, 'AuthRetryableFetchError', status);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,SAAP,SAAyBC,KAAzB,CAA8B;EAGlCC,YAAYC,OAAZ,EAA2B;IACzB,MAAMA,OAAN;IAHQ,qBAAgB,IAAhB;IAIR,KAAKC,IAAL,GAAY,WAAZ;EACD;;AANiC;AASpC,OAAM,SAAUC,WAAV,CAAsBC,KAAtB,EAAoC;EACxC,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+C,mBAAmBA,KAAzE;AACD;AAED,OAAM,MAAOC,YAAP,SAA4BP,SAA5B,CAAqC;EAGzCE,YAAYC,OAAZ,EAA6BK,MAA7B,EAA2C;IACzC,MAAML,OAAN;IACA,KAAKC,IAAL,GAAY,cAAZ;IACA,KAAKI,MAAL,GAAcA,MAAd;EACD;;EAEDC,MAAM;IACJ,OAAO;MACLL,IAAI,EAAE,KAAKA,IADN;MAELD,OAAO,EAAE,KAAKA,OAFT;MAGLK,MAAM,EAAE,KAAKA;IAHR,CAAP;EAKD;;AAfwC;AAkB3C,OAAM,SAAUE,cAAV,CAAyBJ,KAAzB,EAAuC;EAC3C,OAAOD,WAAW,CAACC,KAAD,CAAX,IAAsBA,KAAK,CAACF,IAAN,KAAe,cAA5C;AACD;AAED,OAAM,MAAOO,gBAAP,SAAgCX,SAAhC,CAAyC;EAG7CE,YAAYC,OAAZ,EAA6BS,aAA7B,EAAmD;IACjD,MAAMT,OAAN;IACA,KAAKC,IAAL,GAAY,kBAAZ;IACA,KAAKQ,aAAL,GAAqBA,aAArB;EACD;;AAP4C;AAU/C,OAAM,MAAOC,eAAP,SAA+Bb,SAA/B,CAAwC;EAG5CE,YAAYC,OAAZ,EAA6BC,IAA7B,EAA2CI,MAA3C,EAAyD;IACvD,MAAML,OAAN;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKI,MAAL,GAAcA,MAAd;EACD;;EAEDC,MAAM;IACJ,OAAO;MACLL,IAAI,EAAE,KAAKA,IADN;MAELD,OAAO,EAAE,KAAKA,OAFT;MAGLK,MAAM,EAAE,KAAKA;IAHR,CAAP;EAKD;;AAf2C;AAkB9C,OAAM,MAAOM,uBAAP,SAAuCD,eAAvC,CAAsD;EAC1DX;IACE,MAAM,uBAAN,EAA+B,yBAA/B,EAA0D,GAA1D;EACD;;AAHyD;AAM5D,OAAM,MAAOa,2BAAP,SAA2CF,eAA3C,CAA0D;EAC9DX,YAAYC,OAAZ,EAA2B;IACzB,MAAMA,OAAN,EAAe,6BAAf,EAA8C,GAA9C;EACD;;AAH6D;AAMhE,OAAM,MAAOa,8BAAP,SAA8CH,eAA9C,CAA6D;EAEjEX,YAAYC,OAAZ,EAAmF;IAAA,IAAtDc,OAAsD,uEAAJ,IAAI;IACjF,MAAMd,OAAN,EAAe,gCAAf,EAAiD,GAAjD;IAFF,eAAkD,IAAlD;IAGE,KAAKc,OAAL,GAAeA,OAAf;EACD;;EAEDR,MAAM;IACJ,OAAO;MACLL,IAAI,EAAE,KAAKA,IADN;MAELD,OAAO,EAAE,KAAKA,OAFT;MAGLK,MAAM,EAAE,KAAKA,MAHR;MAILS,OAAO,EAAE,KAAKA;IAJT,CAAP;EAMD;;AAdgE;AAiBnE,OAAM,MAAOC,uBAAP,SAAuCL,eAAvC,CAAsD;EAC1DX,YAAYC,OAAZ,EAA6BK,MAA7B,EAA2C;IACzC,MAAML,OAAN,EAAe,yBAAf,EAA0CK,MAA1C;EACD;;AAHyD","names":["AuthError","Error","constructor","message","name","isAuthError","error","AuthApiError","status","toJSON","isAuthApiError","AuthUnknownError","originalError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","details","AuthRetryableFetchError"],"sources":["D:\\Documenti\\GitHub\\ZooGames\\application\\frontend\\node_modules\\@supabase\\gotrue-js\\src\\lib\\errors.ts"],"sourcesContent":["export class AuthError extends Error {\n  protected __isAuthError = true\n\n  constructor(message: string) {\n    super(message)\n    this.name = 'AuthError'\n  }\n}\n\nexport function isAuthError(error: unknown): error is AuthError {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\n}\n\nexport class AuthApiError extends AuthError {\n  status: number\n\n  constructor(message: string, status: number) {\n    super(message)\n    this.name = 'AuthApiError'\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport function isAuthApiError(error: unknown): error is AuthApiError {\n  return isAuthError(error) && error.name === 'AuthApiError'\n}\n\nexport class AuthUnknownError extends AuthError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'AuthUnknownError'\n    this.originalError = originalError\n  }\n}\n\nexport class CustomAuthError extends AuthError {\n  name: string\n  status: number\n  constructor(message: string, name: string, status: number) {\n    super(message)\n    this.name = name\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400)\n  }\n}\n\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message: string) {\n    super(message, 'AuthInvalidCredentialsError', 400)\n  }\n}\n\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthImplicitGrantRedirectError', 500)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message: string, status: number) {\n    super(message, 'AuthRetryableFetchError', status)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}