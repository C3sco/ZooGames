{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Quiz\\\\QuizItem.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport random from \"./Random.js\";\nimport './quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizItem(_ref) {\n  _s();\n\n  let {\n    correctAnswer,\n    incorrectAnswers,\n    question,\n    difficulty,\n    onNextClick,\n    onAnswerSelected\n  } = _ref;\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const hasPickedAnswer = selectedAnswer !== null;\n  const allAnswers = [correctAnswer, ...incorrectAnswers];\n  const [shuffledAnswers] = useState(() => random(allAnswers));\n  let nextButtonClassName = \"trivia-item__button trivia-item__next-button\";\n  if (!hasPickedAnswer) nextButtonClassName += \" trivia-item__button--disabled\";\n\n  const onAnswerClick = event => {\n    const playerAnswer = event.target.innerHTML;\n    setSelectedAnswer(playerAnswer);\n    const wasPlayerCorrect = playerAnswer === correctAnswer;\n    onAnswerSelected(wasPlayerCorrect, difficulty);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"trivia-item__difficulty\",\n      children: [\"Difficolt\\xE0: \", difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"trivia-item__question\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"trivia-item__answers\",\n      children: shuffledAnswers.map((answer, i) => {\n        let className = \"trivia-item__button\";\n\n        if (hasPickedAnswer) {\n          const pickedThisAnswer = answer === selectedAnswer;\n          const isThisCorrect = answer === correctAnswer;\n\n          if (pickedThisAnswer && isThisCorrect) {\n            className += \" trivia-item__button--correct\";\n          } else if (pickedThisAnswer && !isThisCorrect) {\n            className += \" trivia-item__button--incorrect\";\n          } else {\n            className += \" trivia-item__button--disabled\";\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: className,\n            onClick: onAnswerClick,\n            disabled: hasPickedAnswer,\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, answer, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: nextButtonClassName,\n      onClick: onNextClick,\n      disabled: !hasPickedAnswer,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizItem, \"xsucgAjIc6nWdARnPm3DlZiTGqU=\");\n\n_c = QuizItem;\nexport default QuizItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizItem\");","map":{"version":3,"names":["useState","random","QuizItem","correctAnswer","incorrectAnswers","question","difficulty","onNextClick","onAnswerSelected","selectedAnswer","setSelectedAnswer","hasPickedAnswer","allAnswers","shuffledAnswers","nextButtonClassName","onAnswerClick","event","playerAnswer","target","innerHTML","wasPlayerCorrect","map","answer","i","className","pickedThisAnswer","isThisCorrect"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Quiz/QuizItem.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport random from \"./Random.js\";\r\nimport './quiz.css'\r\n\r\nfunction QuizItem({\r\n  correctAnswer,\r\n  incorrectAnswers,\r\n  question,\r\n  difficulty,\r\n  onNextClick,\r\n  onAnswerSelected,\r\n}) {\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const hasPickedAnswer = selectedAnswer !== null;\r\n\r\n  const allAnswers = [correctAnswer, ...incorrectAnswers];\r\n  const [shuffledAnswers] = useState(() => random(allAnswers));\r\n\r\n  let nextButtonClassName = \"trivia-item__button trivia-item__next-button\";\r\n  if (!hasPickedAnswer) nextButtonClassName += \" trivia-item__button--disabled\";\r\n\r\n  const onAnswerClick = (event) => {\r\n    const playerAnswer = event.target.innerHTML;\r\n    setSelectedAnswer(playerAnswer);\r\n    const wasPlayerCorrect = playerAnswer === correctAnswer;\r\n    onAnswerSelected(wasPlayerCorrect, difficulty);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"trivia-item__difficulty\">Difficolt√†: {difficulty}</p>\r\n      <p className=\"trivia-item__question\">{question}</p>\r\n      <ul className=\"trivia-item__answers\">\r\n        {shuffledAnswers.map((answer, i) => {\r\n          let className = \"trivia-item__button\";\r\n          if (hasPickedAnswer) {\r\n            const pickedThisAnswer = answer === selectedAnswer;\r\n            const isThisCorrect = answer === correctAnswer;\r\n            if (pickedThisAnswer && isThisCorrect) {\r\n              className += \" trivia-item__button--correct\";\r\n            } else if (pickedThisAnswer && !isThisCorrect) {\r\n              className += \" trivia-item__button--incorrect\";\r\n            } else {\r\n              className += \" trivia-item__button--disabled\";\r\n            }\r\n          }\r\n\r\n          return (\r\n            <li key={answer}>\r\n              <button className={className} onClick={onAnswerClick} disabled={hasPickedAnswer}>\r\n                {answer}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button className={nextButtonClassName} onClick={onNextClick} disabled={!hasPickedAnswer}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizItem;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,YAAP;;;AAEA,SAASC,QAAT,OAOG;EAAA;;EAAA,IAPe;IAChBC,aADgB;IAEhBC,gBAFgB;IAGhBC,QAHgB;IAIhBC,UAJgB;IAKhBC,WALgB;IAMhBC;EANgB,CAOf;EACD,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;EACA,MAAMW,eAAe,GAAGF,cAAc,KAAK,IAA3C;EAEA,MAAMG,UAAU,GAAG,CAACT,aAAD,EAAgB,GAAGC,gBAAnB,CAAnB;EACA,MAAM,CAACS,eAAD,IAAoBb,QAAQ,CAAC,MAAMC,MAAM,CAACW,UAAD,CAAb,CAAlC;EAEA,IAAIE,mBAAmB,GAAG,8CAA1B;EACA,IAAI,CAACH,eAAL,EAAsBG,mBAAmB,IAAI,gCAAvB;;EAEtB,MAAMC,aAAa,GAAIC,KAAD,IAAW;IAC/B,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,SAAlC;IACAT,iBAAiB,CAACO,YAAD,CAAjB;IACA,MAAMG,gBAAgB,GAAGH,YAAY,KAAKd,aAA1C;IACAK,gBAAgB,CAACY,gBAAD,EAAmBd,UAAnB,CAAhB;EACD,CALD;;EAOA,oBACE;IAAA,wBACE;MAAG,SAAS,EAAC,yBAAb;MAAA,8BAAoDA,UAApD;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAG,SAAS,EAAC,uBAAb;MAAA,UAAsCD;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAI,SAAS,EAAC,sBAAd;MAAA,UACGQ,eAAe,CAACQ,GAAhB,CAAoB,CAACC,MAAD,EAASC,CAAT,KAAe;QAClC,IAAIC,SAAS,GAAG,qBAAhB;;QACA,IAAIb,eAAJ,EAAqB;UACnB,MAAMc,gBAAgB,GAAGH,MAAM,KAAKb,cAApC;UACA,MAAMiB,aAAa,GAAGJ,MAAM,KAAKnB,aAAjC;;UACA,IAAIsB,gBAAgB,IAAIC,aAAxB,EAAuC;YACrCF,SAAS,IAAI,+BAAb;UACD,CAFD,MAEO,IAAIC,gBAAgB,IAAI,CAACC,aAAzB,EAAwC;YAC7CF,SAAS,IAAI,iCAAb;UACD,CAFM,MAEA;YACLA,SAAS,IAAI,gCAAb;UACD;QACF;;QAED,oBACE;UAAA,uBACE;YAAQ,SAAS,EAAEA,SAAnB;YAA8B,OAAO,EAAET,aAAvC;YAAsD,QAAQ,EAAEJ,eAAhE;YAAA,UACGW;UADH;YAAA;YAAA;YAAA;UAAA;QADF,GAASA,MAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAOD,CArBA;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eA2BE;MAAQ,SAAS,EAAER,mBAAnB;MAAwC,OAAO,EAAEP,WAAjD;MAA8D,QAAQ,EAAE,CAACI,eAAzE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GAzDQT,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}