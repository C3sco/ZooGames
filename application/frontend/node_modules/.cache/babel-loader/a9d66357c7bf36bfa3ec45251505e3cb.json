{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Quiz\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst table = {\n  comics: 29,\n  history: 23,\n  politics: 24\n};\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\nconst url = \"\";\nconst tempUrl = \"https://opentdb.com/api.php?amount=10&category=29&difficulty=easy&type=multiple\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"comics\",\n    difficulty: \"easy\"\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchQuestions = async url => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch(err => console.log(err));\n\n    if (response) {\n      const data = response.data.results;\n\n      if (data.length > 0) {\n        setQuestions(response.data.results);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex(oldIndex => {\n      const index = oldIndex + 1;\n\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n\n  const checkAnswer = value => {\n    if (value) {\n      setCorrect(oldState => oldState + 1);\n    }\n\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      amount,\n      category,\n      difficulty\n    } = quiz;\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      waiting,\n      loading,\n      questions,\n      index,\n      correct,\n      error,\n      isModalOpen,\n      nextQuestion,\n      checkAnswer,\n      closeModal,\n      quiz,\n      handleChange,\n      handleSubmit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"s1YzmmGMMUByrxjDK1IMtj+uOBw=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["axios","React","useState","useContext","useEffect","table","comics","history","politics","API_ENDPOINT","url","tempUrl","AppContext","createContext","AppProvider","children","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","quiz","setQuiz","amount","category","difficulty","isModalOpen","setIsModalOpen","fetchQuestions","response","catch","err","console","log","data","results","length","nextQuestion","oldIndex","openModal","checkAnswer","value","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Quiz/context.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState, useContext, useEffect } from \"react\";\n\nconst table = {\n  comics: 29,\n  history: 23,\n  politics: 24,\n};\n\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst url = \"\";\nconst tempUrl =\n  \"https://opentdb.com/api.php?amount=10&category=29&difficulty=easy&type=multiple\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"comics\",\n    difficulty: \"easy\",\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(response.data.results);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => oldState + 1);\n    }\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;;AAEA,MAAMC,KAAK,GAAG;EACZC,MAAM,EAAE,EADI;EAEZC,OAAO,EAAE,EAFG;EAGZC,QAAQ,EAAE;AAHE,CAAd;AAMA,MAAMC,YAAY,GAAG,8BAArB;AAEA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,OAAO,GACX,iFADF;AAGA,MAAMC,UAAU,gBAAGX,KAAK,CAACY,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC;IAC/B4B,MAAM,EAAE,EADuB;IAE/BC,QAAQ,EAAE,QAFqB;IAG/BC,UAAU,EAAE;EAHmB,CAAD,CAAhC;EAKA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMiC,cAAc,GAAG,MAAOzB,GAAP,IAAe;IACpCS,UAAU,CAAC,IAAD,CAAV;IACAF,UAAU,CAAC,KAAD,CAAV;IACA,MAAMmB,QAAQ,GAAG,MAAMpC,KAAK,CAACU,GAAD,CAAL,CAAW2B,KAAX,CAAkBC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA1B,CAAvB;;IACA,IAAIF,QAAJ,EAAc;MACZ,MAAMK,IAAI,GAAGL,QAAQ,CAACK,IAAT,CAAcC,OAA3B;;MACA,IAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;QACnBtB,YAAY,CAACe,QAAQ,CAACK,IAAT,CAAcC,OAAf,CAAZ;QACAvB,UAAU,CAAC,KAAD,CAAV;QACAF,UAAU,CAAC,KAAD,CAAV;QACAU,QAAQ,CAAC,KAAD,CAAR;MACD,CALD,MAKO;QACLV,UAAU,CAAC,IAAD,CAAV;QACAU,QAAQ,CAAC,IAAD,CAAR;MACD;IACF,CAXD,MAWO;MACLV,UAAU,CAAC,IAAD,CAAV;IACD;EACF,CAlBD;;EAoBA,MAAM2B,YAAY,GAAG,MAAM;IACzBrB,QAAQ,CAAEsB,QAAD,IAAc;MACrB,MAAMvB,KAAK,GAAGuB,QAAQ,GAAG,CAAzB;;MACA,IAAIvB,KAAK,GAAGF,SAAS,CAACuB,MAAV,GAAmB,CAA/B,EAAkC;QAChCG,SAAS;QACT,OAAO,CAAP;MACD,CAHD,MAGO;QACL,OAAOxB,KAAP;MACD;IACF,CARO,CAAR;EASD,CAVD;;EAYA,MAAMyB,WAAW,GAAIC,KAAD,IAAW;IAC7B,IAAIA,KAAJ,EAAW;MACTvB,UAAU,CAAEwB,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAV;IACD;;IACDL,YAAY;EACb,CALD;;EAOA,MAAME,SAAS,GAAG,MAAM;IACtBZ,cAAc,CAAC,IAAD,CAAd;EACD,CAFD;;EAIA,MAAMgB,UAAU,GAAG,MAAM;IACvBjC,UAAU,CAAC,IAAD,CAAV;IACAQ,UAAU,CAAC,CAAD,CAAV;IACAS,cAAc,CAAC,KAAD,CAAd;EACD,CAJD;;EAMA,MAAMiB,YAAY,GAAIC,CAAD,IAAO;IAC1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;IACA,MAAML,KAAK,GAAGI,CAAC,CAACE,MAAF,CAASN,KAAvB;IACAnB,OAAO,CAAC,EAAE,GAAGD,IAAL;MAAW,CAACyB,IAAD,GAAQL;IAAnB,CAAD,CAAP;EACD,CAJD;;EAMA,MAAMO,YAAY,GAAIH,CAAD,IAAO;IAC1BA,CAAC,CAACI,cAAF;IACA,MAAM;MAAE1B,MAAF;MAAUC,QAAV;MAAoBC;IAApB,IAAmCJ,IAAzC;IACA,MAAMlB,GAAG,GAAI,GAAED,YAAa,UAASqB,MAAO,eAAcE,UAAW,aAAY3B,KAAK,CAAC0B,QAAD,CAAW,gBAAjG;IACAI,cAAc,CAACzB,GAAD,CAAd;EACD,CALD;;EAOA,oBACE,QAAC,UAAD,CAAY,QAAZ;IACE,KAAK,EAAE;MACLM,OADK;MAELE,OAFK;MAGLE,SAHK;MAILE,KAJK;MAKLE,OALK;MAMLE,KANK;MAOLO,WAPK;MAQLW,YARK;MASLG,WATK;MAULG,UAVK;MAWLtB,IAXK;MAYLuB,YAZK;MAaLI;IAbK,CADT;IAAA,UAiBGxC;EAjBH;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAjGD,C,CAkGA;;;GAlGMD,W;;KAAAA,W;AAmGN,OAAO,MAAM2C,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOtD,UAAU,CAACS,UAAD,CAAjB;AACD,CAFM;;IAAM6C,gB;;AAIb,SAAS7C,UAAT,EAAqBE,WAArB"},"metadata":{},"sourceType":"module"}