{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\ImpiccatoGame\\\\Javascript\\\\Impiccato.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header.js';\nimport Figure from './Figure.js';\nimport WrongLetters from './WrongLetters.js';\nimport Word from './Word.js';\nimport Popup from './Popup.js';\nimport Notification from './Notification.js';\nimport { showNotification as show, checkWin } from './helpers.js';\nimport '../Style/impiccato.css';\nimport { supabase } from '../../../components/Database.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = supabase; //const words = ['application', 'programming', 'interface', 'wizard'];\n\nfunction Impiccato() {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [selectedWord, setRandomWord] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const response = await db.from('animals').select();\n        setWords(response.Nome);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWords();\n  }, []);\n  useEffect(() => {\n    if (!loading && words.length > 0) {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      setRandomWord(words[randomIndex]);\n    }\n  }, [words, loading]);\n  console.log(selectedWord);\n  console.log(selectedWord);\n  console.log(selectedWord); //let selectedWord = words[Math.floor(Math.random() * words.length)];\n\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true); // Empty Arrays\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      correctLetters: correctLetters,\n      wrongLetters: wrongLetters,\n      selectedWord: selectedWord,\n      setPlayable: setPlayable,\n      playAgain: playAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Impiccato, \"zPg++E5PDYC0PZ0+AdDgn8pq58s=\");\n\n_c = Impiccato;\nexport default Impiccato;\n\nvar _c;\n\n$RefreshReg$(_c, \"Impiccato\");","map":{"version":3,"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","showNotification","show","checkWin","supabase","db","Impiccato","words","setWords","selectedWord","setRandomWord","loading","setLoading","fetchWords","response","from","select","Nome","error","console","length","randomIndex","Math","floor","random","log","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/ImpiccatoGame/Javascript/Impiccato.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header.js';\r\nimport Figure from './Figure.js';\r\nimport WrongLetters from './WrongLetters.js';\r\nimport Word from './Word.js';\r\nimport Popup from './Popup.js';\r\nimport Notification from './Notification.js';\r\nimport { showNotification as show, checkWin } from './helpers.js';\r\nimport '../Style/impiccato.css';\r\nimport { supabase } from '../../../components/Database.js';\r\n\r\nconst db = supabase;\r\n\r\n\r\n//const words = ['application', 'programming', 'interface', 'wizard'];\r\n\r\nfunction Impiccato() {\r\n  const [words, setWords] = useState([]);\r\n  const [selectedWord, setRandomWord] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchWords = async () => {\r\n      try {\r\n        const response = await db.from('animals').select();\r\n        setWords(response.Nome);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchWords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading && words.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * words.length);\r\n      setRandomWord(words[randomIndex]);\r\n    }\r\n  }, [words, loading]);\r\n\r\n  console.log(selectedWord);\r\n  console.log(selectedWord);\r\n  console.log(selectedWord);\r\n  //let selectedWord = words[Math.floor(Math.random() * words.length)];\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = event => {\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable]);\r\n\r\n  function playAgain() {\r\n    setPlayable(true);\r\n\r\n    // Empty Arrays\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n\r\n    const random = Math.floor(Math.random() * words.length);\r\n    selectedWord = words[random];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <Header />\r\n      <div className=\"game-container\">\r\n        <Figure wrongLetters={wrongLetters} />\r\n        <WrongLetters wrongLetters={wrongLetters} />\r\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n      </div>\r\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\r\n      <Notification showNotification={showNotification} />\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Impiccato;  "],"mappings":"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"},"metadata":{},"sourceType":"module"}