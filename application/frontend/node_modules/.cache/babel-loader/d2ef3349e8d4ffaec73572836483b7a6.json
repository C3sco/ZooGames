{"ast":null,"code":"import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport React, { useRef, useEffect, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition(_ref) {\n  let {\n    in: inProp,\n    onTransition\n  } = _ref;\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current\n    });\n  }, [inProp, handleTransition]);\n  useEffect(() => {\n    isInitialRef.current = false; // this is for strict mode\n\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\n\nexport default function ImperativeTransition(_ref2) {\n  let {\n    children,\n    in: inProp,\n    onExited,\n    onEntered,\n    transition\n  } = _ref2;\n  const [exited, setExited] = useState(!inProp);\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.in) {\n          setExited(false);\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n\n      Promise.resolve(transition(options)).then(onFinish);\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","map":{"version":3,"names":["useMergedRefs","useEventCallback","React","useRef","useEffect","cloneElement","useState","NoopTransition","jsx","_jsx","useTransition","in","inProp","onTransition","ref","isInitialRef","handleTransition","current","element","initial","ImperativeTransition","children","onExited","onEntered","transition","exited","setExited","options","onFinish","Promise","resolve","then","combinedRef","renderTransition","Component","runTransition","props","Object","assign"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/node_modules/@restart/ui/esm/ImperativeTransition.js"],"sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport React, { useRef, useEffect, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current\n    });\n  }, [inProp, handleTransition]);\n  useEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.in) {\n          setExited(false);\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish);\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}