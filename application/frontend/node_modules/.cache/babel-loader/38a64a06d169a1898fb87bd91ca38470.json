{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true,\n  drop: 'down'\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","map":{"version":3,"names":["classNames","React","useContext","useMemo","BaseDropdown","useUncontrolled","useEventCallback","DropdownContext","DropdownItem","DropdownMenu","getDropdownMenuPlacement","DropdownToggle","InputGroupContext","useBootstrapPrefix","useIsRTL","createWithBsPrefix","alignPropType","jsx","_jsx","DropdownHeader","defaultProps","role","DropdownDivider","Component","DropdownItemText","navbar","align","autoClose","drop","Dropdown","forwardRef","pProps","ref","bsPrefix","show","className","onSelect","onToggle","focusFirstItemOnShow","as","_4","props","isInputGroup","prefix","isRTL","isClosingPermitted","source","handleToggle","nextShow","meta","originalEvent","currentTarget","document","key","alignEnd","placement","contextValue","directionClasses","down","up","end","start","Provider","value","children","itemSelector","displayName","Object","assign","Toggle","Menu","Item","ItemText","Divider","Header"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/node_modules/react-bootstrap/esm/Dropdown.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true,\n  drop: 'down'\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}