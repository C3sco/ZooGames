{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router';\nimport { useAuth } from './Auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  // Get current user and signOut function from context\n  const {\n    user,\n    signOut\n  } = useAuth();\n  const history = useNavigate();\n\n  async function handleSignOut() {\n    // Ends user session\n    await signOut(); // Redirects the user to Login page\n\n    history.push('/login');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.id, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignOut,\n      children: \"Sign out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n/* eslint-disable react-hooks/exhaustive-deps \r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom';\r\n \r\nconst Dashboard = () => {\r\n    const [name, setName] = useState('');\r\n    const [token, setToken] = useState('');\r\n    const [expire, setExpire] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const history = useNavigate();\r\n \r\n    useEffect(() => {\r\n        refreshToken();\r\n        getUsers();\r\n    }, []);\r\n \r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3000/users/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setName(decoded.name);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n \r\n    const axiosJWT = axios.create();\r\n \r\n    axiosJWT.interceptors.request.use(async (config) => {\r\n        const currentDate = new Date();\r\n        if (expire * 1000 < currentDate.getTime()) {\r\n            console.log(\"DENTRO1\");\r\n            const response = await axios.get('http://localhost:3000/users/token');\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setName(decoded.name);\r\n            setExpire(decoded.exp);\r\n        }\r\n        return config;\r\n    }, (error) => {\r\n        return Promise.reject(error);\r\n    });\r\n \r\n    const getUsers = async () => {\r\n        console.log(\"DENTRO2\");\r\n        const response = await axiosJWT.get('http://localhost:3000/users', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        setUsers(response.data);\r\n    }\r\n \r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Welcome Back: {name}</h1>\r\n            <table className=\"table is-striped is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => (\r\n                        <tr key={user.id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                        </tr>\r\n                    ))}\r\n \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Dashboard */\n\n_s(Dashboard, \"dQ1ZcyZJ1fxAUHPHIHwM9HrNX7s=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useNavigate","useAuth","Dashboard","user","signOut","history","handleSignOut","push","id"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/components/Dashboard.js"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useAuth } from './Auth.js'\r\n\r\nexport default function Dashboard() {\r\n  // Get current user and signOut function from context\r\n  const { user, signOut } = useAuth()\r\n\r\n  const history = useNavigate()\r\n\r\n  async function handleSignOut() {\r\n    // Ends user session\r\n    await signOut()\r\n\r\n    // Redirects the user to Login page\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Change it to display the user ID too ðŸ‘‡*/}\r\n      <p>Welcome, {user?.id}!</p>\r\n      <button onClick={handleSignOut}>Sign out</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n/* eslint-disable react-hooks/exhaustive-deps \r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom';\r\n \r\nconst Dashboard = () => {\r\n    const [name, setName] = useState('');\r\n    const [token, setToken] = useState('');\r\n    const [expire, setExpire] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const history = useNavigate();\r\n \r\n    useEffect(() => {\r\n        refreshToken();\r\n        getUsers();\r\n    }, []);\r\n \r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3000/users/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setName(decoded.name);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n \r\n    const axiosJWT = axios.create();\r\n \r\n    axiosJWT.interceptors.request.use(async (config) => {\r\n        const currentDate = new Date();\r\n        if (expire * 1000 < currentDate.getTime()) {\r\n            console.log(\"DENTRO1\");\r\n            const response = await axios.get('http://localhost:3000/users/token');\r\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwt_decode(response.data.accessToken);\r\n            setName(decoded.name);\r\n            setExpire(decoded.exp);\r\n        }\r\n        return config;\r\n    }, (error) => {\r\n        return Promise.reject(error);\r\n    });\r\n \r\n    const getUsers = async () => {\r\n        console.log(\"DENTRO2\");\r\n        const response = await axiosJWT.get('http://localhost:3000/users', {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        setUsers(response.data);\r\n    }\r\n \r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Welcome Back: {name}</h1>\r\n            <table className=\"table is-striped is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => (\r\n                        <tr key={user.id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                        </tr>\r\n                    ))}\r\n \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Dashboard */"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC;EACA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBH,OAAO,EAAjC;EAEA,MAAMI,OAAO,GAAGL,WAAW,EAA3B;;EAEA,eAAeM,aAAf,GAA+B;IAC7B;IACA,MAAMF,OAAO,EAAb,CAF6B,CAI7B;;IACAC,OAAO,CAACE,IAAR,CAAa,QAAb;EACD;;EAED,oBACE;IAAA,wBAEE;MAAA,wBAAaJ,IAAb,aAAaA,IAAb,uBAAaA,IAAI,CAAEK,EAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEF,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA9GwBJ,S;UAEID,O,EAEVD,W;;;KAJME,S"},"metadata":{},"sourceType":"module"}