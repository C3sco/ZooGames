{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\userPages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useAuth } from '../components/Auth.js';\nimport { supabase } from '../components/Database.js';\nimport ProfileImage from './ProfileImage.js';\nimport './dashboard.css';\n/* \r\nQuesta è la schermata che appare all'utente una volta loggato.\r\nBisogna sistemare l'html in modo da renderla un po' più bella, il js funziona.\r\nCi sono delle textbox in cui puoi scrivere le solite cose da modificare (username)\r\nC'è la possibilità di mettere un immagine profilo però non è ancora collegata al db quella quindi non si vede però\r\nho già setuppato il label in cui uscirà.\r\nBisogna aggiungere le textbox per nome, cognome e data di nascita.\r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    session\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(null);\n  const [website, setWebsite] = useState(null);\n  const [avatar_url, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    getProfile();\n  }, [session]);\n\n  const getProfile = async () => {\n    try {\n      setLoading(true);\n      const {\n        user\n      } = session;\n      let {\n        data,\n        error,\n        status\n      } = await supabase.from('users').select(`email`).eq('id', user.id).single();\n\n      if (error && status !== 406) {\n        throw error;\n      }\n\n      if (data) {\n        setUsername(data.username); //setWebsite(data.website)\n        //setAvatarUrl(data.avatar_url)\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProfile = async e => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const {\n        user\n      } = session;\n      const updates = {\n        id: user.id,\n        username,\n        //website,\n        //avatar_url,\n        updated_at: new Date()\n      };\n      let {\n        error\n      } = await supabase.from('users').upsert(updates);\n\n      if (error) {\n        throw error;\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"center\",\n    \"aria-live\": \"polite\",\n    children: [loading ? 'Saving ...' : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateProfile,\n      className: \"form-widget\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileImage\n      /* Richiama la classe ProfileImage in cui c'è il return del form, quindi bisogna modificare l'html di quello */\n      , {\n        url: avatar_url,\n        size: 150,\n        onUpload: url => {\n          setAvatarUrl(url);\n          updateProfile({\n            username,\n            website,\n            avatar_url: url\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", session.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"name\",\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"surname\",\n        children: \"Cognome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"surname\",\n        name: \"surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username || '',\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"dob\",\n        children: \"Data di nascita:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dob\",\n        name: \"dob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button primary block\",\n          disabled: loading,\n          children: \"Aggiorna Informazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button block\",\n      onClick: () => supabase.auth.signOut(),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"ywFn1yZ5qU1jzBRJ6ENZ4swXNpU=\");\n\n_c = Dashboard;\nexport default Dashboard;\n/* <div>\r\n            <label htmlFor=\"website\">Website</label>\r\n            <input\r\n              id=\"website\"\r\n              type=\"url\"\r\n              value={website || ''}\r\n              onChange={(e) => setWebsite(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          */\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","supabase","ProfileImage","Dashboard","session","loading","setLoading","username","setUsername","website","setWebsite","avatar_url","setAvatarUrl","getProfile","user","data","error","status","from","select","eq","id","single","alert","message","updateProfile","e","preventDefault","updates","updated_at","Date","upsert","url","email","target","value","auth","signOut"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/userPages/Dashboard.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useAuth } from '../components/Auth.js'\r\nimport { supabase } from '../components/Database.js';\r\nimport ProfileImage from './ProfileImage.js';\r\n\r\nimport './dashboard.css'\r\n\r\n/* \r\nQuesta è la schermata che appare all'utente una volta loggato.\r\nBisogna sistemare l'html in modo da renderla un po' più bella, il js funziona.\r\nCi sono delle textbox in cui puoi scrivere le solite cose da modificare (username)\r\nC'è la possibilità di mettere un immagine profilo però non è ancora collegata al db quella quindi non si vede però\r\nho già setuppato il label in cui uscirà.\r\nBisogna aggiungere le textbox per nome, cognome e data di nascita.\r\n\r\n*/\r\n\r\n\r\n\r\nconst Dashboard = ({ session }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [username, setUsername] = useState(null)\r\n  const [website, setWebsite] = useState(null)\r\n  const [avatar_url, setAvatarUrl] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getProfile()\r\n  }, [session])\r\n\r\n  const getProfile = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const { user } = session\r\n\r\n      let { data, error, status } = await supabase\r\n        .from('users')\r\n        .select(`email`)\r\n        .eq('id', user.id)\r\n        .single()\r\n\r\n      if (error && status !== 406) {\r\n        throw error\r\n      }\r\n\r\n      if (data) {\r\n        setUsername(data.username)\r\n        //setWebsite(data.website)\r\n        //setAvatarUrl(data.avatar_url)\r\n      }\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateProfile = async (e) => {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setLoading(true)\r\n      const { user } = session\r\n\r\n      const updates = {\r\n        id: user.id,\r\n        username,\r\n        //website,\r\n        //avatar_url,\r\n        updated_at: new Date(),\r\n      }\r\n\r\n      let { error } = await supabase.from('users').upsert(updates)\r\n\r\n      if (error) {\r\n        throw error\r\n      }\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"center\" aria-live=\"polite\">\r\n      {loading ? (\r\n        'Saving ...'\r\n      ) : (\r\n        <form onSubmit={updateProfile} className=\"form-widget\">\r\n          <ProfileImage /* Richiama la classe ProfileImage in cui c'è il return del form, quindi bisogna modificare l'html di quello */\r\n            url={avatar_url}\r\n            size={150}\r\n            onUpload={(url) => {\r\n              setAvatarUrl(url)\r\n              updateProfile({ username, website, avatar_url: url })\r\n            }}\r\n          />\r\n          <br></br>\r\n\r\n          <div >Email: {session.user.email}</div>\r\n          <label for=\"name\">Nome:</label><br/>\r\n          <input type=\"text\" id=\"name\" name=\"name\"/><br/>\r\n          <label for=\"surname\">Cognome:</label><br/>\r\n          <input type=\"text\" id=\"surname\" name=\"surname\"/><br/>\r\n          <label for=\"username\">Username:</label><br/>\r\n          <input id=\"username\"\r\n              type=\"text\"\r\n              value={username || ''}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            /><br/>\r\n          <label for=\"dob\">Data di nascita:</label><br/>\r\n          <input type=\"date\" id=\"dob\" name=\"dob\"/><br/><br/>          \r\n          <div>\r\n            <button className=\"button primary block\" disabled={loading}>\r\n              Aggiorna Informazioni\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <br></br>\r\n      <button type=\"button\" className=\"button block\" onClick={() => supabase.auth.signOut()}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n/* <div>\r\n            <label htmlFor=\"website\">Website</label>\r\n            <input\r\n              id=\"website\"\r\n              type=\"url\"\r\n              value={website || ''}\r\n              onChange={(e) => setWebsite(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          */"],"mappings":"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"},"metadata":{},"sourceType":"module"}