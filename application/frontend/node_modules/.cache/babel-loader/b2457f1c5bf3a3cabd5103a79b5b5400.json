{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\Quiz\\\\QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport Game from './Game.js';\nimport Loading from './Loading.js';\nimport Error from './Error.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizPage() {\n  _s();\n\n  // const [isLoading, setLoading]\n  const [quiz, setQuiz] = useState({\n    isLoading: true,\n    error: \"\",\n    data: null\n  });\n  const {\n    isLoading,\n    error,\n    data\n  } = quiz;\n  useEffect(() => {\n    async function getQuiz() {\n      try {\n        console.log(\"Sto caricando le domande\");\n        const url = \"https://opentdb.com/api.php?amount=10&category=27\";\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(\"Errore nella richiesta url\");\n        }\n\n        const json = await response.json();\n        const {\n          response_code,\n          results\n        } = json;\n\n        if (response_code === 1) {\n          throw new Error(\"Errore nella richiesta api, nessun risultato\");\n        }\n\n        setQuiz({\n          isLoading: false,\n          error: \"\",\n          data: results\n        });\n        console.log(json);\n      } catch (err) {\n        setQuiz({\n          isLoading: false,\n          error: \"Qualcosa è andato storto\",\n          data: null\n        });\n      }\n    }\n\n    getQuiz();\n  }, []);\n  let contents;\n\n  if (isLoading) {\n    contents = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this);\n  } else if (error !== \"\") {\n    contents = /*#__PURE__*/_jsxDEV(Error, {\n      children: \"Qualcosa non ha funzionato\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this);\n  } else {\n    contents = /*#__PURE__*/_jsxDEV(Game, {\n      quizData: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: contents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizPage, \"RMeu2D5cf0l8bCH07ZAm69hvhfE=\");\n\n_c = QuizPage;\nexport default QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["Game","Loading","Error","useState","useEffect","QuizPage","quiz","setQuiz","isLoading","error","data","getQuiz","console","log","url","response","fetch","ok","json","response_code","results","err","contents"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/Quiz/QuizPage.js"],"sourcesContent":["import Game from './Game.js'\r\nimport Loading from './Loading.js'\r\nimport Error from './Error.js'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nfunction QuizPage() {\r\n\r\n    // const [isLoading, setLoading]\r\n    const [quiz, setQuiz] = useState({ isLoading: true, error: \"\", data: null });\r\n    const { isLoading, error, data } = quiz;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function getQuiz() {\r\n\r\n            try {\r\n                console.log(\"Sto caricando le domande\");\r\n                const url = \"https://opentdb.com/api.php?amount=10&category=27\";\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(\"Errore nella richiesta url\")\r\n                }\r\n                const json = await response.json();\r\n                const { response_code, results } = json\r\n\r\n                if (response_code === 1) {\r\n                    throw new Error(\"Errore nella richiesta api, nessun risultato\")\r\n                }\r\n\r\n                setQuiz({\r\n                    isLoading: false,\r\n                    error: \"\",\r\n                    data: results\r\n                })\r\n\r\n                console.log(json)\r\n            } catch (err) {\r\n                setQuiz({\r\n                    isLoading: false,\r\n                    error: \"Qualcosa è andato storto\",\r\n                    data: null\r\n                })\r\n            }\r\n        }\r\n        getQuiz();\r\n\r\n    }, []);\r\n\r\n    let contents;\r\n    if (isLoading) {\r\n        contents = <Loading />\r\n    } else if (error !== \"\") {\r\n        contents = <Error>Qualcosa non ha funzionato</Error>\r\n    } else {\r\n        contents = <Game quizData={data} />\r\n    }\r\n\r\n\r\n    return (\r\n        <main>\r\n            {contents}\r\n        </main>\r\n    )\r\n\r\n}\r\nexport default QuizPage"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAEhB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAAEK,SAAS,EAAE,IAAb;IAAmBC,KAAK,EAAE,EAA1B;IAA8BC,IAAI,EAAE;EAApC,CAAD,CAAhC;EACA,MAAM;IAAEF,SAAF;IAAaC,KAAb;IAAoBC;EAApB,IAA6BJ,IAAnC;EAGAF,SAAS,CAAC,MAAM;IAEZ,eAAeO,OAAf,GAAyB;MAErB,IAAI;QACAC,OAAO,CAACC,GAAR,CAAY,0BAAZ;QACA,MAAMC,GAAG,GAAG,mDAAZ;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;QACA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;UACd,MAAM,IAAIf,KAAJ,CAAU,4BAAV,CAAN;QACH;;QACD,MAAMgB,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;QACA,MAAM;UAAEC,aAAF;UAAiBC;QAAjB,IAA6BF,IAAnC;;QAEA,IAAIC,aAAa,KAAK,CAAtB,EAAyB;UACrB,MAAM,IAAIjB,KAAJ,CAAU,8CAAV,CAAN;QACH;;QAEDK,OAAO,CAAC;UACJC,SAAS,EAAE,KADP;UAEJC,KAAK,EAAE,EAFH;UAGJC,IAAI,EAAEU;QAHF,CAAD,CAAP;QAMAR,OAAO,CAACC,GAAR,CAAYK,IAAZ;MACH,CArBD,CAqBE,OAAOG,GAAP,EAAY;QACVd,OAAO,CAAC;UACJC,SAAS,EAAE,KADP;UAEJC,KAAK,EAAE,0BAFH;UAGJC,IAAI,EAAE;QAHF,CAAD,CAAP;MAKH;IACJ;;IACDC,OAAO;EAEV,CAnCQ,EAmCN,EAnCM,CAAT;EAqCA,IAAIW,QAAJ;;EACA,IAAId,SAAJ,EAAe;IACXc,QAAQ,gBAAG,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAX;EACH,CAFD,MAEO,IAAIb,KAAK,KAAK,EAAd,EAAkB;IACrBa,QAAQ,gBAAG,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACH,CAFM,MAEA;IACHA,QAAQ,gBAAG,QAAC,IAAD;MAAM,QAAQ,EAAEZ;IAAhB;MAAA;MAAA;MAAA;IAAA,QAAX;EACH;;EAGD,oBACI;IAAA,UACKY;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GA5DQjB,Q;;KAAAA,Q;AA6DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}