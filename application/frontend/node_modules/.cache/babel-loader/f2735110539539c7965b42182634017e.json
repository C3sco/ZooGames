{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\n\nconst _getErrorMessage = err => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\n\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n  const NETWORK_ERROR_CODES = [502, 503, 504];\n\n  if (!looksLikeFetchResponse(error)) {\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n  } else if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n  } else {\n    // got a response from server that is not in the 500...599 range - should not retry\n    error.json().then(err => {\n      reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n    }).catch(e => {\n      // not a valid json response\n      reject(new AuthUnknownError(_getErrorMessage(e), e));\n    });\n  }\n});\n\nconst _getRequestParams = (method, options, parameters, body) => {\n  const params = {\n    method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n\n  if (method === 'GET') {\n    return params;\n  }\n\n  params.headers = Object.assign({\n    'Content-Type': 'application/json;charset=UTF-8'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return Object.assign(Object.assign({}, params), parameters);\n};\n\nexport function _request(fetcher, method, url, options) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, function* () {\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n      headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n      qs['redirect_to'] = options.redirectTo;\n    }\n\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = yield _handleRequest(fetcher, method, url + queryString, {\n      headers,\n      noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : {\n      data: Object.assign({}, data),\n      error: null\n    };\n  });\n}\n\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      fetcher(url, _getRequestParams(method, options, parameters, body)).then(result => {\n        if (!result.ok) throw result;\n        if (options === null || options === void 0 ? void 0 : options.noResolveJson) return result;\n        return result.json();\n      }).then(data => resolve(data)).catch(error => handleError(error, reject));\n    });\n  });\n}\n\nexport function _sessionResponse(data) {\n  var _a;\n\n  let session = null;\n\n  if (hasSession(data)) {\n    session = Object.assign({}, data);\n    session.expires_at = expiresAt(data.expires_in);\n  }\n\n  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n  return {\n    data: {\n      session,\n      user\n    },\n    error: null\n  };\n}\nexport function _userResponse(data) {\n  var _a;\n\n  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n  return {\n    data: {\n      user\n    },\n    error: null\n  };\n}\nexport function _ssoResponse(data) {\n  return {\n    data,\n    error: null\n  };\n}\nexport function _generateLinkResponse(data) {\n  const {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type\n  } = data,\n        rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n\n  const properties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type\n  };\n  const user = Object.assign({}, rest);\n  return {\n    data: {\n      properties,\n      user\n    },\n    error: null\n  };\n}\nexport function _noResolveJsonResponse(data) {\n  return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\n\nfunction hasSession(data) {\n  return data.access_token && data.refresh_token && data.expires_in;\n}","map":{"version":3,"mappings":"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","names":["expiresAt","looksLikeFetchResponse","AuthApiError","AuthRetryableFetchError","AuthUnknownError","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","handleError","reject","__awaiter","NETWORK_ERROR_CODES","includes","status","json","then","catch","e","_getRequestParams","method","options","parameters","body","params","headers","Object","_request","fetcher","url","jwt","qs","query","_a","redirectTo","queryString","keys","length","URLSearchParams","toString","data","_handleRequest","noResolveJson","xform","Promise","resolve","result","ok","_sessionResponse","session","hasSession","expires_at","expires_in","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","access_token","refresh_token"],"sources":["D:\\Documenti\\GitHub\\ZooGames\\application\\frontend\\node_modules\\@supabase\\gotrue-js\\src\\lib\\fetch.ts"],"sourcesContent":["import { expiresAt, looksLikeFetchResponse } from './helpers'\nimport {\n  AuthResponse,\n  SSOResponse,\n  GenerateLinkProperties,\n  GenerateLinkResponse,\n  User,\n  UserResponse,\n} from './types'\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\n  const NETWORK_ERROR_CODES = [502, 503, 504]\n  if (!looksLikeFetchResponse(error)) {\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), 0))\n  } else if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status))\n  } else {\n    // got a response from server that is not in the 500...599 range - should not retry\n    error\n      .json()\n      .then((err) => {\n        reject(new AuthApiError(_getErrorMessage(err), error.status || 500))\n      })\n      .catch((e) => {\n        // not a valid json response\n        reject(new AuthUnknownError(_getErrorMessage(e), e))\n      })\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\ninterface GotrueRequestOptions extends FetchOptions {\n  jwt?: string\n  redirectTo?: string\n  body?: object\n  query?: { [key: string]: string }\n  /**\n   * Function that transforms api response from gotrue into a desirable / standardised format\n   */\n  xform?: (data: any) => any\n}\n\nexport async function _request(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: GotrueRequestOptions\n) {\n  const headers = { ...options?.headers }\n  if (options?.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`\n  }\n  const qs = options?.query ?? {}\n  if (options?.redirectTo) {\n    qs['redirect_to'] = options.redirectTo\n  }\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\n  const data = await _handleRequest(\n    fetcher,\n    method,\n    url + queryString,\n    { headers, noResolveJson: options?.noResolveJson },\n    {},\n    options?.body\n  )\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport function _sessionResponse(data: any): AuthResponse {\n  let session = null\n  if (hasSession(data)) {\n    session = { ...data }\n    session.expires_at = expiresAt(data.expires_in)\n  }\n  const user: User = data.user ?? (data as User)\n  return { data: { session, user }, error: null }\n}\n\nexport function _userResponse(data: any): UserResponse {\n  const user: User = data.user ?? (data as User)\n  return { data: { user }, error: null }\n}\n\nexport function _ssoResponse(data: any): SSOResponse {\n  return { data, error: null }\n}\n\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\n\n  const properties: GenerateLinkProperties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type,\n  }\n\n  const user: User = { ...rest }\n  return {\n    data: {\n      properties,\n      user,\n    },\n    error: null,\n  }\n}\n\nexport function _noResolveJsonResponse(data: any): Response {\n  return data\n}\n\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data: any): boolean {\n  return data.access_token && data.refresh_token && data.expires_in\n}\n"]},"metadata":{},"sourceType":"module"}