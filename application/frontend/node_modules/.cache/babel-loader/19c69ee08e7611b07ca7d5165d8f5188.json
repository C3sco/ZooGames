{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\userPages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { supabase } from '../components/Database.js';\nimport ProfileImage from './ProfileImage.js';\nimport './dashboard.css';\n/* \r\nQuesta è la schermata che appare all'utente una volta loggato.\r\nBisogna sistemare l'html in modo da renderla un po' più bella, il js funziona.\r\nCi sono delle textbox in cui puoi scrivere le solite cose da modificare (username)\r\nC'è la possibilità di mettere un immagine profilo però non è ancora collegata al db quella quindi non si vede però\r\nho già setuppato il label in cui uscirà.\r\nBisogna aggiungere le textbox per nome, cognome e data di nascita.\r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    session\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(null);\n  const [name, setName] = useState(null);\n  const [surname, setSurname] = useState(null);\n  const [birthday, setBirthday] = useState(null);\n  const [avatar_url, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    getProfile();\n  }, [session]);\n\n  const getProfile = async () => {\n    try {\n      setLoading(true);\n      const {\n        user\n      } = session;\n      let {\n        data,\n        error,\n        status\n      } = await supabase.from('users').select(`*`).eq('id', user.id).single();\n\n      if (error && status !== 406) {\n        throw error;\n      }\n\n      if (data) {\n        setUsername(data.username);\n        setName(data.name);\n        setSurname(data.surname);\n        setBirthday(data.birthday); //setAvatarUrl(data.avatar_url)\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProfile = async e => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const {\n        user\n      } = session;\n      const updates = {\n        id: user.id,\n        username,\n        name,\n        surname,\n        birthday,\n        //avatar_url,\n        updated_at: new Date()\n      };\n      let {\n        error\n      } = await supabase.from('users').upsert(updates);\n\n      if (error) {\n        throw error;\n      }\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"aria-live\": \"polite\",\n    children: [loading ? 'Saving ...' : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateProfile,\n      className: \"form-widget\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileImage\n      /* Richiama la classe ProfileImage in cui c'è il return del form, quindi bisogna modificare l'html di quello */\n      , {\n        url: avatar_url,\n        size: 150,\n        onUpload: url => {\n          setAvatarUrl(url);\n          updateProfile({\n            username,\n            name,\n            surname,\n            birthday\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", session.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Punteggio: \", session.user.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"name\",\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: name || '',\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"surname\",\n        children: \"Cognome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"surname\",\n        name: \"surname\",\n        value: surname || '',\n        onChange: e => setSurname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username || '',\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"lbl\",\n        for: \"dob\",\n        children: \"Data di nascita:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"dob\",\n        name: \"dob\",\n        value: birthday || '',\n        onChange: e => setBirthday(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: loading,\n          children: \"Aggiorna Informazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: () => supabase.auth.signOut(),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"peEwBkQ+61Qs04If60RDMUU+1pU=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","ProfileImage","Dashboard","session","loading","setLoading","username","setUsername","name","setName","surname","setSurname","birthday","setBirthday","avatar_url","setAvatarUrl","getProfile","user","data","error","status","from","select","eq","id","single","alert","message","updateProfile","e","preventDefault","updates","updated_at","Date","upsert","url","email","score","target","value","auth","signOut"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/userPages/Dashboard.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { supabase } from '../components/Database.js';\r\nimport ProfileImage from './ProfileImage.js';\r\n\r\nimport './dashboard.css'\r\n\r\n/* \r\nQuesta è la schermata che appare all'utente una volta loggato.\r\nBisogna sistemare l'html in modo da renderla un po' più bella, il js funziona.\r\nCi sono delle textbox in cui puoi scrivere le solite cose da modificare (username)\r\nC'è la possibilità di mettere un immagine profilo però non è ancora collegata al db quella quindi non si vede però\r\nho già setuppato il label in cui uscirà.\r\nBisogna aggiungere le textbox per nome, cognome e data di nascita.\r\n\r\n*/\r\n\r\n\r\n\r\nconst Dashboard = ({ session }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [username, setUsername] = useState(null)\r\n  const [name, setName] = useState(null)\r\n  const [surname, setSurname] = useState(null)\r\n  const [birthday, setBirthday] = useState(null)\r\n  const [avatar_url, setAvatarUrl] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getProfile()\r\n  }, [session])\r\n\r\n  const getProfile = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const { user } = session\r\n\r\n      let { data, error, status } = await supabase\r\n        .from('users')\r\n        .select(`*`)\r\n        .eq('id', user.id)\r\n        .single()\r\n\r\n      if (error && status !== 406) {\r\n        throw error\r\n      }\r\n\r\n      if (data) {\r\n        setUsername(data.username)\r\n        setName(data.name)\r\n        setSurname(data.surname)\r\n        setBirthday(data.birthday)\r\n        //setAvatarUrl(data.avatar_url)\r\n      }\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateProfile = async (e) => {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setLoading(true)\r\n      const { user } = session\r\n\r\n      const updates = {\r\n        id: user.id,\r\n        username,\r\n        name,\r\n        surname,\r\n        birthday,\r\n        //avatar_url,\r\n        updated_at: new Date(),\r\n      }\r\n\r\n      let { error } = await supabase.from('users').upsert(updates)\r\n\r\n      if (error) {\r\n        throw error\r\n      }\r\n    } catch (error) {\r\n      alert(error.message)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div  aria-live=\"polite\">\r\n      {loading ? (\r\n        'Saving ...'\r\n      ) : (\r\n        <form onSubmit={updateProfile} className=\"form-widget\">\r\n          <ProfileImage /* Richiama la classe ProfileImage in cui c'è il return del form, quindi bisogna modificare l'html di quello */\r\n            url={avatar_url}\r\n            size={150}\r\n            onUpload={(url) => {\r\n              setAvatarUrl(url)\r\n              updateProfile({ username, name, surname, birthday })\r\n            }}\r\n          />\r\n          <br></br>\r\n\r\n          <div >Email: {session.user.email}</div>\r\n          <div >Punteggio: {session.user.score}</div>\r\n          <br></br>\r\n          <label for=\"name\">Nome:</label><br/>\r\n          <input type=\"text\" id=\"name\" name=\"name\" value={name || ''}\r\n              onChange={(e) => setName(e.target.value)}/><br/>\r\n          <label for=\"surname\">Cognome:</label><br/>\r\n          <input type=\"text\" id=\"surname\" name=\"surname\"  value={surname || ''}\r\n              onChange={(e) => setSurname(e.target.value)}/><br/>\r\n          <label for=\"username\">Username:</label><br/>\r\n          <input id=\"username\"\r\n              type=\"text\"\r\n              value={username || ''}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            /><br/>\r\n          <label class='lbl' for=\"dob\">Data di nascita:</label><br/>\r\n          <input type=\"date\" id=\"dob\" name=\"dob\" value={birthday || ''}\r\n              onChange={(e) => setBirthday(e.target.value)}/><br/><br/>          \r\n          <div>\r\n            <button className=\"btn\" disabled={loading}>\r\n              Aggiorna Informazioni\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      <br></br>\r\n      <button type=\"button\" className=\"btn\" onClick={() => supabase.auth.signOut()}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}