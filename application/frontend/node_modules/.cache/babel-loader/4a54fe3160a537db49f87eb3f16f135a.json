{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\ImpiccatoGame\\\\Javascript\\\\Impiccato.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header.js';\nimport Figure from './Figure.js';\nimport WrongLetters from './WrongLetters.js';\nimport Word from './Word.js';\nimport Popup from './Popup.js';\nimport Notification from './Notification.js';\nimport { showNotification as show, checkWin } from './helpers.js';\nimport '../Style/impiccato.css';\nimport { supabase } from '../../../components/Database.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst db = supabase;\nconst words = await db.from('animals').select('Nome');\n\ntry {} catch (err) {\n  console.log(err);\n} //const words = ['application', 'programming', 'interface', 'wizard'];\n\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction Impiccato() {\n  _s();\n\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true); // Empty Arrays\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      correctLetters: correctLetters,\n      wrongLetters: wrongLetters,\n      selectedWord: selectedWord,\n      setPlayable: setPlayable,\n      playAgain: playAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Impiccato, \"01339m8ADmuWJa1yHmNYefcuCX0=\");\n\n_c = Impiccato;\nexport default Impiccato;\n\nvar _c;\n\n$RefreshReg$(_c, \"Impiccato\");","map":{"version":3,"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","showNotification","show","checkWin","supabase","db","words","from","select","err","console","log","selectedWord","Math","floor","random","length","Impiccato","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/ImpiccatoGame/Javascript/Impiccato.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header.js';\r\nimport Figure from './Figure.js';\r\nimport WrongLetters from './WrongLetters.js';\r\nimport Word from './Word.js';\r\nimport Popup from './Popup.js';\r\nimport Notification from './Notification.js';\r\nimport { showNotification as show, checkWin } from './helpers.js';\r\nimport '../Style/impiccato.css';\r\nimport { supabase } from '../../../components/Database.js';\r\n\r\nconst db = supabase;\r\nconst words = await db.from('animals').select('Nome');\r\ntry{\r\n  \r\n}catch(err){\r\n  console.log(err);\r\n}\r\n\r\n\r\n//const words = ['application', 'programming', 'interface', 'wizard'];\r\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\r\n\r\nfunction Impiccato() {\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = event => {\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable]);\r\n\r\n  function playAgain() {\r\n    setPlayable(true);\r\n\r\n    // Empty Arrays\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n\r\n    const random = Math.floor(Math.random() * words.length);\r\n    selectedWord = words[random];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"game-container\">\r\n        <Figure wrongLetters={wrongLetters} />\r\n        <WrongLetters wrongLetters={wrongLetters} />\r\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n      </div>\r\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\r\n      <Notification showNotification={showNotification} />\r\n    </>\r\n  );\r\n}\r\n  \r\n  \r\nexport default Impiccato;  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,gBAAgB,IAAIC,IAA7B,EAAmCC,QAAnC,QAAmD,cAAnD;AACA,OAAO,wBAAP;AACA,SAASC,QAAT,QAAyB,iCAAzB;;;AAEA,MAAMC,EAAE,GAAGD,QAAX;AACA,MAAME,KAAK,GAAG,MAAMD,EAAE,CAACE,IAAH,CAAQ,SAAR,EAAmBC,MAAnB,CAA0B,MAA1B,CAApB;;AACA,IAAG,CAEF,CAFD,CAEC,OAAMC,GAAN,EAAU;EACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,C,CAGD;;;AACA,IAAIG,YAAY,GAAGN,KAAK,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,KAAK,CAACU,MAAjC,CAAD,CAAxB;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAAC2B,cAAD,EAAiBC,iBAAjB,IAAsC5B,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACQ,gBAAD,EAAmBuB,mBAAnB,IAA0C/B,QAAQ,CAAC,KAAD,CAAxD;EAEAC,SAAS,CAAC,MAAM;IACd,MAAM+B,aAAa,GAAGC,KAAK,IAAI;MAC7B,MAAM;QAAEC,GAAF;QAAOC;MAAP,IAAmBF,KAAzB;;MACA,IAAIR,QAAQ,IAAIU,OAAO,IAAI,EAAvB,IAA6BA,OAAO,IAAI,EAA5C,EAAgD;QAC9C,MAAMC,MAAM,GAAGF,GAAG,CAACG,WAAJ,EAAf;;QACA,IAAIlB,YAAY,CAACmB,QAAb,CAAsBF,MAAtB,CAAJ,EAAmC;UACjC,IAAI,CAACT,cAAc,CAACW,QAAf,CAAwBF,MAAxB,CAAL,EAAsC;YACpCR,iBAAiB,CAACW,cAAc,IAAI,CAAC,GAAGA,cAAJ,EAAoBH,MAApB,CAAnB,CAAjB;UACD,CAFD,MAEO;YACL3B,IAAI,CAACsB,mBAAD,CAAJ;UACD;QACF,CAND,MAMO;UACL,IAAI,CAACF,YAAY,CAACS,QAAb,CAAsBF,MAAtB,CAAL,EAAoC;YAClCN,eAAe,CAACS,cAAc,IAAI,CAAC,GAAGA,cAAJ,EAAoBH,MAApB,CAAnB,CAAf;UACD,CAFD,MAEO;YACL3B,IAAI,CAACsB,mBAAD,CAAJ;UACD;QACF;MACF;IACF,CAlBD;;IAmBAS,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCT,aAAnC;IAEA,OAAO,MAAMQ,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCV,aAAtC,CAAb;EACD,CAvBQ,EAuBN,CAACL,cAAD,EAAiBE,YAAjB,EAA+BJ,QAA/B,CAvBM,CAAT;;EAyBA,SAASkB,SAAT,GAAqB;IACnBjB,WAAW,CAAC,IAAD,CAAX,CADmB,CAGnB;;IACAE,iBAAiB,CAAC,EAAD,CAAjB;IACAE,eAAe,CAAC,EAAD,CAAf;IAEA,MAAMR,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,KAAK,CAACU,MAAjC,CAAf;IACAJ,YAAY,GAAGN,KAAK,CAACS,MAAD,CAApB;EACD;;EAED,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE,QAAC,MAAD;QAAQ,YAAY,EAAEO;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,YAAD;QAAc,YAAY,EAAEA;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,IAAD;QAAM,YAAY,EAAEV,YAApB;QAAkC,cAAc,EAAEQ;MAAlD;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,KAAD;MAAO,cAAc,EAAEA,cAAvB;MAAuC,YAAY,EAAEE,YAArD;MAAmE,YAAY,EAAEV,YAAjF;MAA+F,WAAW,EAAEO,WAA5G;MAAyH,SAAS,EAAEiB;IAApI;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,YAAD;MAAc,gBAAgB,EAAEnC;IAAhC;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GAtDQgB,S;;KAAAA,S;AAyDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}