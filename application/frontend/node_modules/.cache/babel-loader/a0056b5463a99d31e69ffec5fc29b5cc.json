{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documenti\\\\GitHub\\\\ZooGames\\\\application\\\\frontend\\\\src\\\\Giochi\\\\ImpiccatoGame\\\\Javascript\\\\Impiccato.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header.js';\nimport Figure from './Figure.js';\nimport WrongLetters from './WrongLetters.js';\nimport Word from './Word.js';\nimport Popup from './Popup.js';\nimport Notification from './Notification.js';\nimport { showNotification as show, checkWin } from './helpers.js';\nimport '../Style/impiccato.css';\nimport { supabase } from '../../../components/Database.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = supabase;\n\nfunction Impiccato(_ref) {\n  _s();\n\n  let {\n    session\n  } = _ref;\n  const [words, setWords] = useState([]);\n  const [selectedWord, setRandomWord] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const score = async () => await supabase.from('users').select(`score`).eq('id', session.id).single();\n\n  console.log(score); // const getProfile = async () => {\n  //   try {\n  //     setLoading(true)\n  //     const { user } = session\n  //     let { data, error, status } = await supabase\n  //       .from('users')\n  //       .select(`score`)\n  //       .eq('id', user.id)\n  //       .single()\n  //     if (error && status !== 406) {\n  //       throw error\n  //     }\n  //   } catch (error) {\n  //     alert(error.message)\n  //   } finally {\n  //     setLoading(false)\n  //   }\n  // }\n\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const response = await db.from('animals').select();\n        setWords(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWords();\n  }, []);\n  useEffect(() => {\n    if (!loading && words.length > 0) {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\n    }\n  }, [words, loading]);\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    if (!loading && words.length > 0) {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      correctLetters: correctLetters,\n      wrongLetters: wrongLetters,\n      selectedWord: selectedWord,\n      setPlayable: setPlayable,\n      playAgain: playAgain,\n      score: points\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Impiccato, \"zPg++E5PDYC0PZ0+AdDgn8pq58s=\");\n\n_c = Impiccato;\nexport default Impiccato;\n\nvar _c;\n\n$RefreshReg$(_c, \"Impiccato\");","map":{"version":3,"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","showNotification","show","checkWin","supabase","db","Impiccato","session","words","setWords","selectedWord","setRandomWord","loading","setLoading","score","from","select","eq","id","single","console","log","fetchWords","response","data","error","length","randomIndex","Math","floor","random","Nome","toLowerCase","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","includes","currentLetters","window","addEventListener","removeEventListener","playAgain","points"],"sources":["D:/Documenti/GitHub/ZooGames/application/frontend/src/Giochi/ImpiccatoGame/Javascript/Impiccato.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header.js';\r\nimport Figure from './Figure.js';\r\nimport WrongLetters from './WrongLetters.js';\r\nimport Word from './Word.js';\r\nimport Popup from './Popup.js';\r\nimport Notification from './Notification.js';\r\nimport { showNotification as show, checkWin } from './helpers.js';\r\nimport '../Style/impiccato.css';\r\nimport { supabase } from '../../../components/Database.js';\r\n\r\nconst db = supabase;\r\n\r\nfunction Impiccato({ session }) {\r\n  const [words, setWords] = useState([]);\r\n  const [selectedWord, setRandomWord] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const score = async() => await supabase\r\n      .from('users')\r\n      .select(`score`)\r\n      .eq('id', session.id)\r\n      .single()\r\n      \r\n  console.log(score);\r\n\r\n  // const getProfile = async () => {\r\n  //   try {\r\n  //     setLoading(true)\r\n  //     const { user } = session\r\n\r\n  //     let { data, error, status } = await supabase\r\n  //       .from('users')\r\n  //       .select(`score`)\r\n  //       .eq('id', user.id)\r\n  //       .single()\r\n\r\n  //     if (error && status !== 406) {\r\n  //       throw error\r\n  //     }\r\n  //   } catch (error) {\r\n  //     alert(error.message)\r\n  //   } finally {\r\n  //     setLoading(false)\r\n  //   }\r\n  // }\r\n  \r\n  useEffect(() => {\r\n    const fetchWords = async () => {\r\n      try {\r\n        const response = await db.from('animals').select();\r\n        setWords(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchWords();\r\n  }, []);\r\n \r\n   useEffect(() => {\r\n    if (!loading && words.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * words.length);\r\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\r\n    }\r\n   }, [words, loading]);\r\n\r\n\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    \r\n    const handleKeydown = event => {\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable]);\r\n\r\n  function playAgain() {\r\n    setPlayable(true);\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n\r\n    if (!loading && words.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * words.length);\r\n      setRandomWord(words[randomIndex].Nome.toLowerCase());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <Header />\r\n      <div className=\"game-container\">\r\n        <Figure wrongLetters={wrongLetters} />\r\n        <WrongLetters wrongLetters={wrongLetters} />\r\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n      </div>\r\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} score={points}/>\r\n      <Notification showNotification={showNotification} />\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Impiccato;  "],"mappings":"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"},"metadata":{},"sourceType":"module"}